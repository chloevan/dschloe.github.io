<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQLs on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/sql/</link>
    <description>Recent content in SQLs on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Apr 2022 00:10:30 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/sql/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Visual Studio Code Oracle 연동</title>
      <link>https://dschloe.github.io/sql/vscode_oracle/</link>
      <pubDate>Tue, 26 Apr 2022 00:10:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/vscode_oracle/</guid>
      <description>개요  VSCode에서 오라클을 연동하는 코드를 작성해본다.  Extension  Extension에서 Oracle을 검색 후, 설치를 진행한다.   설치 중간에 아래와 같은 문구가 나오면 해당 파일을 설치해야 한다.  필수 설치 파일  설치 URL은 다음과 같다.  URL : https://www.oracle.com/database/technologies/appdev/dotnet/install-dotnetcore-windows.html     위 그림에서 Install .NET Runtime for Windows x64를 클릭하면 아래 화면과 함께 설치 파일이 다운로드 된다.   설치 파일을 클릭하면 아래와 같은 설치 관리자가 등장한다.</description>
    </item>
    
    <item>
      <title>PyCharm Oracle 연동</title>
      <link>https://dschloe.github.io/sql/pycharm_oracle/</link>
      <pubDate>Mon, 25 Apr 2022 14:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/pycharm_oracle/</guid>
      <description>개요  PyCharm에서 Oracle과 연동하는 방법에 대해 작성한다.  Database Navigator 설치  Project 폴더에서 File - Settings - Plugins를 실행한다. 검색창에 Database를 입력한다.  Database Navigator를 선택한다. 설치가 완료되면, Restart IDE 창이 활성화가 될 것이다. PyCharm을 재 시작한다.    DB Navigator 실행  상단 메뉴창에서 DB Navigator를 선택한다.   새로운 데이터베이스 버튼을 클릭한 후, Oracle을 선택한다.   필수 입력값을 입력 한 후, Test Connection을 실행하여 정상적으로 연동이 되었는지 확인한다.</description>
    </item>
    
    <item>
      <title>SQL Developer with Git</title>
      <link>https://dschloe.github.io/sql/sql_developer_git/</link>
      <pubDate>Sun, 24 Apr 2022 10:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/sql_developer_git/</guid>
      <description>개요  SQL Developer에서 깃헙과 연동하는 방법을 알려준다. 깃허브 회원가입 및 깃 설치는 이미 된 것으로 가정한다. 새로운 Repository를 만든다.  필자는 oracle_lectures라는 Repository를 만들었다.    SQL Developer에서 필요한 작업  이제 SQL Developer 프로그램을 연다.  팀 - Git - 복제 순으로 순차적으로 연다.     아래 화면에서 다음을 클릭한다.   아래 화면에서 새로 생성한 URL, Username, Password를 순차적으로 입력한다.  이 때, Repo 생성 시, Private으로 되어 있었다면 인증 에러가 생길 수 있다.</description>
    </item>
    
    <item>
      <title>오라클 19c 기본 세팅</title>
      <link>https://dschloe.github.io/sql/oracle_basic_settings/</link>
      <pubDate>Sat, 23 Apr 2022 14:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/oracle_basic_settings/</guid>
      <description>1단계 sqlplus 실행하기  설치가 끝난 후, 윈도우에서 sqlplus 입력 사용자명은 system, 비밀번호는 오라클 설치 시 (1234)] 주의 : 관리자로 실행  2단계 : 테이블스페이스 생성하기  테이블스페이스는 myts라는 이름으로 100MB 크기로 생성 만약 데이터가 증가하면 5MB씩 자동 증가 옵션 추가 생성 구문은 다음과 같음  SQL&amp;gt; CREATE TABLESPACE myts DATAFILE &amp;#39;C:\oracle\oradata\MYORACLE\myts.dbf&amp;#39; SIZE 100M AUTOEXTEND ON NEXT 5M; 테이블스페이스가 생성되었습니다. 3단계 : 사용자 생성  사용자를 생성하는 코드를 작성한다.  SQL&amp;gt; CREATE USER ora_user IDENTIFIED BY evan DEFAULT TABLESPACE MYTS TEMPORARY TABLESPACE TEMP; 사용자가 생성되었습니다.</description>
    </item>
    
    <item>
      <title>Oracle CSV File Upload using CMD</title>
      <link>https://dschloe.github.io/sql/oracle_csv_upload/</link>
      <pubDate>Fri, 22 Apr 2022 14:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/oracle_csv_upload/</guid>
      <description>개요  iris.csv 파일을 오라클 명령어를 통해서 업로드를 진행한다. 대부분의 명령어는 터미널에서 처리하였다.  SQLPLUS 접속  SQL에 접속한다.  /img/sql/oracle_csv_upload
테이블 생성  터미널에서 iris 테이블을 생성한다.  CREATE TABLE iris ( sepal_length INTEGER, sepal_width INTEGER, petal_length INTEGER, petal_width INTEGER, species varchar2(20) ); ctl 파일 생성  메모장에 아래와 같이 ctl 파일을 생성한다. 파일명은 control.ctl이다.  LOAD DATA INFILE &#39;iris.csv&#39; INTO TABLE iris fields terminated by &#39;,&#39; ( sepal_length, sepal_width, petal_length, petal_width, species ) 파일 업로드  sqlplus 접속을 종료한다.</description>
    </item>
    
    <item>
      <title>오라클 삭제 - Windows</title>
      <link>https://dschloe.github.io/sql/oracle_deinstallation/</link>
      <pubDate>Fri, 22 Apr 2022 14:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/oracle_deinstallation/</guid>
      <description>개요  오라클 설치가 제대로 안되는 경우가 왕왕 있다. 이럴 경우, 삭제 후 재설치하는 것을 권장한다.  1단계 : 오라클 서비스 중지시키기  제어판 - 시스템 및 보안 - 관리도구 - 서비스 메뉴를 실행해 Oracle로 시작되는 모든 서비를 중지시킨다. 또는 윈도우 검색창에서 서비스를 검색해도 앱에 접근할 수 있다.  2단계 : 삭제 시동 파일 실행하기  오라클 설치 폴더 - deinstall 폴더에서 deinstall.bat 파일을 관리자 권한으로 실행한다.  이름 목록 지정화면에서 설치 시 지정했던 전역데이터베이스 이름을 입력하고, 계속하겠습니까?</description>
    </item>
    
    <item>
      <title>PostgreSQL Installation on WSL2 and Windows</title>
      <link>https://dschloe.github.io/sql/postgreslq_wsl2/</link>
      <pubDate>Sun, 10 Apr 2022 14:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/postgreslq_wsl2/</guid>
      <description>개요  WSL2에서 PostgreSQL을 설치한다. pgAdmin은 Windows에 설치한다.  터미널 업그레이드  먼저 WSL 터미널을 열고, Ubuntu 패키지를 모두 업데이트 및 업그레이드를 한다.  $ sudo apt update [sudo] password for evan: Hit:1 https://artifacts.elastic.co/packages/7.x/apt stable InRelease Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease Get:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB] Get:6 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1712 kB] Get:7 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [916 kB] Fetched 2963 kB in 5s (600 kB/s) Reading package lists.</description>
    </item>
    
    <item>
      <title>Python과 Oracle 연동</title>
      <link>https://dschloe.github.io/sql/python_oracle/</link>
      <pubDate>Fri, 16 Jul 2021 00:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/python_oracle/</guid>
      <description>개요  파이참에서 가상환경을 만들어 오라클 연동 예제를 작성한다. 아나콘다, 파이참, 그리고 오라클 설치는 생략한다.  1. 가상환경 활성화  cmd 창에서 가상 환경을 세팅 하도록 한다. (권장: 관리자 실행) 바탕화면에 필자는 python_oracle 폴더를 생성했다. 현재 경로는 아래와 같다.  C:\Users\1\Desktop\python_oracle&amp;gt;  먼저 가상환경을 만든다.  conda create --name your_env_name python=3.8 . . done # # To activate this environment, use # # $ conda activate python_oracle # # To deactivate an active environment, use # # $ conda deactivate  your_env_name 대신 다른 이름으로 설정해도 된다.</description>
    </item>
    
    <item>
      <title>PostgreSQL 기초 1</title>
      <link>https://dschloe.github.io/sql/db_creation_01/</link>
      <pubDate>Sat, 03 Jul 2021 00:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/db_creation_01/</guid>
      <description>개요  psql shell 명령어를 간단히 배우도록 한다. Database, Schema, Table를 생성하도록 한다. 데이터타입에 대해 배우도록 한다.  psql Shell 명령어    명령어 설명     \q psql을 종료한다.   \l 데이터베이스를 조회한다.   \c 입력한 DB로 이동한다.   \e 외부편집기로 sql 쿼리 입력 가능   \dt 현재 DB에서 테이블을 확인할 수 있음.     자주 사용하는 명령어이기 때문에 확인한다.  DB 및 Table 다루기  콘솔창에서 book 이름의 DB를 생성한다.</description>
    </item>
    
    <item>
      <title>PostgreSQL 테이블 생성 예제</title>
      <link>https://dschloe.github.io/sql/table_creation_01/</link>
      <pubDate>Wed, 09 Jun 2021 00:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/table_creation_01/</guid>
      <description>테이블 생성 및 수정 삭제  pgAdmin4을 활용한 테이블 수정 삭제 Schemas에서 public-Table 마우스 오른쪽 버튼을 누른 뒤 Query Tool을 선택합니다.   developers 테이블을 별도로 생성합니다.  CREATE TABLE developers ( book_id INTEGER, date DATE, name VARCHAR(80) ) CREATE TABLE Query returned successfully in 65 msec.  이번에는 값을 입력하도록 합니다.  INSERT INTO developers VALUES(1, &amp;#39;2019-12-17&amp;#39;, &amp;#39;&amp;#34;자바&amp;#34;&amp;#39;)  그런데, 작은 따옴표(&#39;)를 넣고 싶을 때는 큰 따옴표(&amp;quot;)로 깜사면, 에러가 발생이 됩니다.</description>
    </item>
    
  </channel>
</rss>
