<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>객체지향 프로그래밍 on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/categories/%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</link>
    <description>Recent content in 객체지향 프로그래밍 on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Apr 2021 16:15:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/categories/%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>파이썬 객체 지향 프로그래밍 - Attributes &amp; Methods (2)</title>
      <link>https://dschloe.github.io/python/basic/python_oop_2/</link>
      <pubDate>Wed, 14 Apr 2021 16:15:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/basic/python_oop_2/</guid>
      <description>1줄 요약 클래스를 직접 구현하면서 Attributes &amp;amp; Methods의 차이점에 대해 이해한다. 개요 기본적인 클래스 등을 작성해본다. class Customer: pass class &amp;lt;name&amp;gt;: 클래스의 이름을 정의함 만약, pass를 입력하면 하나의 empty 클래스를 생성하는 것이다. 이렇게 생성된 클래스는 여러개의 인스턴스를 만들 수 있음 c1 = Customer() c2 = Customer() Methods 추가 이번에는 간단한 method를 추가한다. class Customer: def identify(self, name): print(&amp;#34;저는 소비자 &amp;#34; + name + &amp;#34; 입니다.&amp;#34;) 함수 작성 시에는 self를 가장 먼저 입력한다.</description>
    </item>
    
    <item>
      <title>파이썬 객체 지향 프로그래밍 - Attributes &amp; Methods</title>
      <link>https://dschloe.github.io/python/basic/python_oop_1/</link>
      <pubDate>Wed, 14 Apr 2021 13:15:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/basic/python_oop_1/</guid>
      <description>1줄 요약 Attributes &amp;amp; Methods의 차이점에 대해 이해한다. 개요 Object = State + Behavior 예) Email, Phone Number, 배송상태 Class는 일종의 가이드라인을 의미 파이썬 내의 모든 객체는 일종으 클래스임 Object Class 7 int &amp;ldquo;Hello&amp;rdquo; str pd.DataFrame() DataFrame 해당 클래스를 찾기 위해 type( )를 사용함. import numpy as np temp = np.array([1, 2, 3]) print(type(temp)) &amp;lt;class &#39;numpy.ndarray&#39;&amp;gt; State + Behavior 그렇다면, State를 지칭하는 파이썬 문법은 무엇인가? 파이썬에서는 이를 Attributes라고 부른다. 또한, Behavior를 지칭하는 파이썬 문법은 무엇인가?</description>
    </item>
    
  </channel>
</rss>
