<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Streamlit on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/categories/streamlit/</link>
    <description>Recent content in Streamlit on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Feb 2023 00:01:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/categories/streamlit/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>가계금융복지조사 데이터 수집</title>
      <link>https://dschloe.github.io/settings/2023/2/mdis_data_load/</link>
      <pubDate>Sat, 18 Feb 2023 00:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/2023/2/mdis_data_load/</guid>
      <description>개요 통계청(https://mdis.kostat.go.kr/) 에서는 마이크로데이터를 제공하고 있음 해당 사이트에서 회원가입은 필수로 진행해야 한다. MDIS 다운로드 서비스 이용 2022년 기준 가계금융복지조사 데이터를 다운로드 받는다. 다운로드 서비스/소득소비자산/가계금융복지조사/가구마스터(제공)/2022년도를 아래와 같이 순차적으로 클릭한다. 다운로드받을 데이터의 형태와 해당 데이터를 입수할 때 필요한 ‘통계 툴 읽기 스크립트’를 선택한다. Python 스크립트는 제공하지 않아서, R로 선택을 한다. 위 그림에서 마이페이지를 클릭한다. </description>
    </item>
    
    <item>
      <title>Docker Streamlit Sample</title>
      <link>https://dschloe.github.io/settings/2023/2/docker_streamlit_app_windows10/</link>
      <pubDate>Wed, 15 Feb 2023 00:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/2023/2/docker_streamlit_app_windows10/</guid>
      <description>개요 도커를 활용하여 Streamlit 배포를 진행해본다. Dockerfile의 의미에 대해 이해한다. Dockerfile Docker 이미지를 빌드하기 위한 일련의 명령어를 포함하는 텍스트 파일 컨테이너에서 애플리케이션이 실행될 때 필요한 환경과 종속성을 정의하는 방법을 제공 패키지 설치, 파일 복사 및 환경 변수 설정 등의 지시어가 포함 사전준비 github에 sample 프로젝트를 올려둔다. 예제 : https://github.com/streamlit/streamlit-example 필자는 독립적으로 github repository를 작성했다. 소스코드 예제 소스코드는 크게 아래와 같이 작성했다. 먼저 app.py는 아래와 같다. import numpy as np import pandas as pd import matplotlib import sklearn import scipy import plotly import streamlit as st def main(): st.</description>
    </item>
    
    <item>
      <title>Streamlit &amp; ChatGPT API 배포 예제</title>
      <link>https://dschloe.github.io/python/2023/02/streamlit_openai_example/</link>
      <pubDate>Thu, 09 Feb 2023 01:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/02/streamlit_openai_example/</guid>
      <description>개요 ChatGPT API 배포 예제 흐름도를 보여주도록 한다. Streamlit 회원가입, OpenAI 회원가입은 완료했다는 가정하에 본 블로그를 읽기 바란다. Streamlit : https://share.streamlit.io/ OpenAI : https://openai.com/api/ API Key 생성 아래 화면에서 View API Keys를 클릭한다. 아래 화면에서 Create new secret key 버튼을 클릭한다. 계정 발급 시 필수 확인 사항 필자는 사업자 G메일 계정이 있고, 개인 계정이 있다. 먼저 개인 계정의 사용자 대시보드 화면은 아래와 같이 나온다. Free trial Usage가 활성화가 되어 있어야 한다.</description>
    </item>
    
    <item>
      <title>Streamlit 라이브러리를 활용한 배포 예제 - sqlite</title>
      <link>https://dschloe.github.io/python/2023/02/streamlite_with_sqlite/</link>
      <pubDate>Wed, 01 Feb 2023 00:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/02/streamlite_with_sqlite/</guid>
      <description>개요 간단한 프로젝트라도 DB와 연동하는 작업은 매우 중요하다. 클라우드 DB를 사용하기 위해서는 클라우드 회원가입 등 번거로운 절차를 거쳐야 하며, 또한 비용도 추가될 수도 있다. SQLite를 사용하면 간단한 DB 작업도 진행할 수 있다. Streamlit + SQLite 연동 작업을 간단히 하도록 해본다. SQLite 데이터 핸들링을 하기 위해서는 Python 기초 문법, Pandas 라이브러리를 배워야 한다. Pandas는 본 블로그에서 CSV 파일을 읽고 저장을 하는데 사용을 하게 된다. SQLite는 입문자가 시작할 수 있는 가장 간단한 DB이다.</description>
    </item>
    
    <item>
      <title>Streamlit 라이브러리를 활용한 배포 - BigQuery 사용</title>
      <link>https://dschloe.github.io/python/2022/12/streamlit_bigquery/</link>
      <pubDate>Fri, 02 Dec 2022 15:15:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2022/12/streamlit_bigquery/</guid>
      <description>개요 Streamlit 라이브러리와 BigQuery를 사용하여 배포를 진행한다. GCP 클라우드 프로젝트 설정 과정은 생략한다. BigQuery API 사용설정 Project API에서 ENABLE APIS AND SERVICES 버튼을 클릭한다. 빅쿼리 API를 탐색한다. 키워드명 : BigQuery API manage 버튼을 클릭한다. 인증키를 다운로드 받도록 한다. (CREATE CREDENTIALS클릭) 아래와 같이 지정 후, 스크롤을 내려서 NEXT 버튼을 클릭한다. 임의의 Service account ID 작성 후, CREATE AND CONTINUE 버튼을 클릭한다. 프로젝트 권한을 부여 후, CONTINUE 버튼을 클릭한다. Done 버튼을 클릭한다. Service Accounts - [우측] Manage keys 버튼 클릭 Create new key 버튼 클릭 JSON 클릭 json 파일을 다운로드 받는다.</description>
    </item>
    
  </channel>
</rss>
