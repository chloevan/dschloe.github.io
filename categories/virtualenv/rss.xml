<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>virtualenv on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/categories/virtualenv/</link>
    <description>Recent content in virtualenv on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Jan 2024 01:40:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/categories/virtualenv/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>conda vs virtualenv 라이브러리 관리 비교</title>
      <link>https://dschloe.github.io/python/2024/01/conda_virtualenv_package_manager/</link>
      <pubDate>Thu, 04 Jan 2024 01:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2024/01/conda_virtualenv_package_manager/</guid>
      <description>개요 파이썬에는 가상환경이 다양하게 존재한다. 이 중, conda와 virtualenv 가상환경에서 라이브러리 관리를 어떻게 하는지 비교를 해보도록 한다. 프로젝트 폴더 생성 폴더명은 virtualTest로 명명했다. Conda 먼저 가상환경을 만들어본다. conda create -n virtualTest python=3.10 conda 가상환경에 접속하는 방법은 다음과 같다. conda activate virtualTest environment.yml 라이브러리 관리를 위해 아래와 같이 샘플 코드를 생성한다. name: virtualTest channels: - defaults dependencies: - python=3.10 - numpy - pandas - pip: - streamlit 실행 코드는 아래와 같다. conda env create -f environment.</description>
    </item>
    
  </channel>
</rss>
