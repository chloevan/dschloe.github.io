<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/r/</link>
    <description>Recent content in R on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 May 2021 13:40:30 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/r/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>R Path Setting on MacOS</title>
      <link>https://dschloe.github.io/settings/r_path/</link>
      <pubDate>Mon, 03 May 2021 13:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/r_path/</guid>
      <description>1줄 요약  터미널에서 R 실행이 안된다면 PATH를 설정한다.  문제 상황  MacOS 터미널에서 R을 실행하고 싶은데, 가끔 아래와 같은 에러 메시지가 나올때가 있다.  $ R bash: R: command not found 문제 해결   이는 환경설정 문제이다. 즉, 이러한 경우에는 여러 솔루션이 있다.
 Ref. Running R from Mac OSX terminal    그 중에서 필자는 Fourth Solution: 선택하였다.
  $ export PATH=&amp;#34;/Library/Frameworks/R.framework/Resources:$PATH&amp;#34;  그 후에 terminal에서 which R을 실행해본다.</description>
    </item>
    
    <item>
      <title>Windows 10 KoNLP 설치</title>
      <link>https://dschloe.github.io/settings/konlp_issue/</link>
      <pubDate>Fri, 26 Mar 2021 14:11:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/konlp_issue/</guid>
      <description>한줄 요약  KoNLP는 여기에서 무조건 해결한다.  KoNLP 이슈  R에서 텍스트 마이닝을 진행할 때에는 반드시 한번쯤은 패키지 설치로 인해 어려움을 겪는다. - R 입문자 분들이 초반에 호기롭게 시작하였다가 대부분 포기하려고 하는 지점이기도 하다. 사실, 조금 더 간편한 방법이 나오기를 기대한다.  1단계 Java 설치 및 환경 변수 설정   주의: 윈도우 10 64비트
  여러 좋은 자료들이 많아서 같이 참고하기를 바란다.
 Java 설치 관련: [JAVA] Windows에 자바 설치하기!</description>
    </item>
    
    <item>
      <title>트위터 데이터 수집 with R</title>
      <link>https://dschloe.github.io/r/newpkgs/rtweet/</link>
      <pubDate>Wed, 24 Mar 2021 11:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/newpkgs/rtweet/</guid>
      <description>1줄 요약  R을 활용하여 트위터 데이터를 수집하는 방법 및 절차에 대해 배우도록 한다.  트위터 API 인증   https://apps.twitter.com에 접속한다.
 회원가입을 진행한다.    create an app 버튼을 클릭한다.   필자는 Hobbysit-Exploring the API를 선택했다.  그 후에 개인 정보 등을 입력해야 한다. 휴대폰, 이메일 인증 등    인증 메일이 오기전까지는 조금 시일이 걸린다.
  rtweet 패키지   별도의 인증 절차 없이 사용 가능한 패키지</description>
    </item>
    
    <item>
      <title>disk.frame 패키지 소개</title>
      <link>https://dschloe.github.io/r/newpkgs/disk_frame/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dschloe.github.io/r/newpkgs/disk_frame/</guid>
      <description>공지  대용량 데이터 전처리시에 필요한 패키지를 소개한다.  url: https://www.youtube.com/watch?v=EOjObl_GSi4       주석은 가급적 원어를 남겨 놓으니 잘 번역하기를 바란다.  설치  설치 방법은 기존과 마찬가지로 간단하게 작성할 수 있다.  install.packages(&amp;#34;disk.frame&amp;#34;) suppressPackageStartupMessages(library(disk.frame)) library(nycflights13) 패키지 주요 아이디어  메모리보다 많은 데이터를 각각의 chunks로 분해하여 하나의 폴더 안에 저장한다. (HDD 디스크 사용) 자세한 셜명은 Giuhub를 참고 (https://github.com/xiaodaigh/disk.frame)  Setup  실습 환경을 구성한다.  setup_disk.frame() ## The number of workers available for disk.</description>
    </item>
    
    <item>
      <title>KDX Competition Guideline</title>
      <link>https://dschloe.github.io/r/competition/blog_kdx_guideline/</link>
      <pubDate>Wed, 14 Oct 2020 09:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/competition/blog_kdx_guideline/</guid>
      <description>개요  본 수업을 듣는 수강생들을 위해 간단한 튜토리얼을 만들었다. 대회는 다음과 같다.  싸이트: 한국데이터거래소    /img/r/competition/blog_kdx_guideline_files/img 1단계 패키지 불러오기  데이터 가공 및 시각화 위주의 패키지를 불러온다.  library(tidyverse) # 데이터 가공 및 시각화 library(readxl) # 엑셀파일 불러오기 패키지  2단계 데이터 불러오기  데이터가 많아서 순차적으로 진행하도록 한다. 각 데이터에 대한 설명은활용데이터설명(PDF)을 참조한다.   먼저 제 개발환경은 아래와 같다.  Note: 윈도우와 Mac은 다를 수 있음을 명심하자.</description>
    </item>
    
    <item>
      <title>(R&#43;Git) 초보자를 위한 깃허브 연동 및 에러 대처법</title>
      <link>https://dschloe.github.io/settings/rstudio_git_beginner/</link>
      <pubDate>Tue, 06 Oct 2020 09:11:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/rstudio_git_beginner/</guid>
      <description>개요  본 Repo는 강림직업전문학교 수강생을 위해 예시로 작성한 Repo입니다. 본 Repo에서는 R을 활용한 데이터 과학 발표자료를 공유하기 위해 만들어졌습니다.  Git &amp;amp; Github   우선 Git을 설치합니다.
 싸이트: https://git-scm.com/ 설정은 모두 기본 값으로 해주시기 바랍니다.    Terimnal 창에서 git을 실행하여 정상적으로 설치되었는지 유무를 확인합니다.
  그 다음은 Github에 회원가입을 합니다
 저장소를 만드는 과정은 아래 싸이트를 참조바랍니다.  싸이트: https://goddaehee.tistory.com/221      이제 RStudio에서 프로젝트를 클릭한 후 아래 화면에서 Version Control을 클릭합니다.</description>
    </item>
    
    <item>
      <title>(NCS) R 기초문법</title>
      <link>https://dschloe.github.io/r/ncs/r_basic_1/</link>
      <pubDate>Fri, 18 Sep 2020 10:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/ncs/r_basic_1/</guid>
      <description>I. 개요  R을 처음 접하는 사람들을 위한 입문 포스트. 기존에 R을 하셨던 분들은 가볍게 보도록 한다. 프로그램을 설치한다.  필수 R: https://www.r-project.org/ 옵션(1) RStudio: https://rstudio.com/ 옵션(2) PyCharm: https://www.jetbrains.com/ko-kr/pycharm/download/   R은 일종의 엔진이기 때문에 필수로 설치한다.  파이썬과 같이 쓰는 유저라면 PyCharm을 R만 사용한다면 RStudio를 사용한다.    (1) 데이터 분석의 기본 흐름  데이터 수집, 저장, 가공, 시각화, 모델링, 보고서 (대시보드) 입문자, 서비스 기획자는 전체의 생태계를 보자. PDF - 강사 메뉴얼 참조  II.</description>
    </item>
    
    <item>
      <title>OCE 패키지 소개</title>
      <link>https://dschloe.github.io/r/newpkgs/oce_intro/</link>
      <pubDate>Sat, 12 Sep 2020 00:21:01 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/newpkgs/oce_intro/</guid>
      <description>개요  새로운 분야에 대한 자료 정리는 언제나 흥미롭다. 오늘은 해양과학을 분석해보는 시간을 갖는다. 사실 필자는 해양과학을 모른다.  교재  교재 Oceanographic Analysis with R는 구매할 수 있다.  패키지 설치  패키지 홈페이지를 참고한다. 패키지 저자는 CRAN에서 다운로드 받는 것 보다는 깃허브에서 받는 것을 추천한다.  패키지 업데이트가 1년에 몇번 되지 않는다고 조금은 솔직하게 말한다.    # install.packages(&amp;#34;oce&amp;#34;, dependencies = TRUE) library(oce) ## Loading required package: gsw ## Loading required package: testthat Evolution of oce  홈페이지에서 Oce는 오픈 소스 시스템으로 소개하고 있기 때문에, 관련 학문에 종사하는 사람들이 참여 해주는 것이 해당 패키지 발전에 매우 중요한 부분이다.</description>
    </item>
    
    <item>
      <title>xgboost and kaggle with R</title>
      <link>https://dschloe.github.io/r/machine_learning/3_6_xgboost/</link>
      <pubDate>Mon, 10 Aug 2020 11:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/machine_learning/3_6_xgboost/</guid>
      <description>개요  R 강의를 진행하면서 xgboost를 R로 구현하고 싶었다. kaggle에 있는 데이터를 불러와서 제출까지 가는 과정을 담았으니 입문자들에게 작은 도움이 되기를 바란다.  XGBoost 개요  논문 제목 - XGBoost: A Scalable Tree Boosting System 논문 게재일: Wed, 9 Mar 2016 01:11:51 UTC (592 KB) 논문 저자: Tianqi Chen, Carlos Guestrin 논문 소개   Tree boosting is a highly effective and widely used machine learning method. In this paper, we describe a scalable end-to-end tree boosting system called XGBoost, which is used widely by data scientists to achieve state-of-the-art results on many machine learning challenges.</description>
    </item>
    
    <item>
      <title>Kaggle with R</title>
      <link>https://dschloe.github.io/kaggle/kaggle_with_r/</link>
      <pubDate>Sat, 08 Aug 2020 21:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/kaggle/kaggle_with_r/</guid>
      <description>강의 홍보  취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다.  스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다.   [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기   개요  R 입문부터 머신러닝까지 가르치게 되었다.  R을 활용한 빅데이터 분석   실제 Kaggle 대회 참여 독려를 위해 R에서 Kaggle 데이터를 불러와 머신러닝을 진행하는 것을 기획하였다. pins 패키지를 활용하면 보다 쉽게 할 수 있다.</description>
    </item>
    
    <item>
      <title>ch05 - Log Scale Visualisation</title>
      <link>https://dschloe.github.io/r/datavisualisation/ch05_logscale_viz/</link>
      <pubDate>Wed, 29 Jul 2020 00:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datavisualisation/ch05_logscale_viz/</guid>
      <description>공지  본 포스트는 데이터 시각화 교과서 내용의 일부를 요약하였다.   본 포스트를 읽고 가급적 전체 내용 숙지를 위해 구매하는 것을 권유한다.  개요  수치형 자료를 Y축으로 놓는 그래프는 언제나 힘들었다. log Scale을 통해 값의 크기를 줄이기는 하지만, Y축을 어떻게 표현하는 것이 좋을지에 대한 고민은 늘 있어왔다. 시각화 이론 중심의 포스팅이기에 코드 리뷰 및 해석은 생략한다.  문제점  log Scale을 적용했을 때와 그렇지 않을 때의 그래프를 비교해본다.  (1) 패키지 불러오기  각각의 패키지를 불러온다.</description>
    </item>
    
    <item>
      <title>추천 시스템 패키지 소개 - recommenderlab</title>
      <link>https://dschloe.github.io/r/recommendation/recommendation_intro/</link>
      <pubDate>Mon, 22 Jun 2020 10:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/recommendation/recommendation_intro/</guid>
      <description>I. 개요   추천시스템을 처음 배우는 접하는 사람들을 위해 준비한 입문 Tutorial이다.
  패키지 소개서에 있는 내용을 한글로 번역하였다.
  This R package provides an infrastructure to test and develop recommender algorithms. The package supports rating (e.g., 1-5 stars) and unary (0-1) data sets. Supported algorithms are:
  이 R 패키지는 추천자 알고리즘을 테스트하고 개발할 수 있는 인프라를 제공한다. 이 패키지는 등급(예: 별 1-5개) 및 단항(0-1) 데이터 세트를 지원한다.</description>
    </item>
    
    <item>
      <title>Google Colab with R</title>
      <link>https://dschloe.github.io/r/r_settings/settings_colab_with_r/</link>
      <pubDate>Fri, 05 Jun 2020 17:20:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/r_settings/settings_colab_with_r/</guid>
      <description>I. 들어가며  빅데이터 시대에 맞춰서 다양한 툴이 나오는 가운데, Google Colab은 가히 혁명적이라 할 수 있다. 과거 높은 사양의 컴퓨터에서만 수행할 수 있었던 머신러닝과 딥러닝을 구글 코랩의 환경에서 무료로 배울 수 있는 기회를 구글이 제공하기 시작했다. 간단하게 아래 소스코드를 실행하여 CPU와 GPU의 연산속도를 비교 해보자.  GPU를 사용한 TensorFlow    II. Google Colab with R  Google Colab은 매우 편리하다. 실제 강의를 시작하면서 파이썬 관련 모든 강의안은 Google Colab으로 제작중이다.</description>
    </item>
    
    <item>
      <title>R - Select Helper Functions</title>
      <link>https://dschloe.github.io/r/datatransform/dplyr02_select_helper/</link>
      <pubDate>Mon, 18 May 2020 08:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datatransform/dplyr02_select_helper/</guid>
      <description>I. 개요 dplyr 문법에서 select에 대해 다룬다. 보통 select는 열 추출 함수로 소개되고 있다. 그런데, select 함수에는 열 추출을 할 때 도와주는 helper functions가 있는데, 간단하게 소개하고자 한다.
 starts_with ends_with contains matches num_range one_of  작은 도움이 되었기를 바란다.
II. 사전 준비  본격적인 실습에 앞서서, 패키지를 로드 한다.  library(dplyr) library(nycflights13)  flights 데이터셋의 변수들을 확인하자.  glimpse(flights) ## Rows: 336,776 ## Columns: 19 ## $ year &amp;lt;int&amp;gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, … ## $ month &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ day &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ dep_time &amp;lt;int&amp;gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558,… ## $ sched_dep_time &amp;lt;int&amp;gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600,… ## $ dep_delay &amp;lt;dbl&amp;gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -… ## $ arr_time &amp;lt;int&amp;gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849… ## $ sched_arr_time &amp;lt;int&amp;gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851… ## $ arr_delay &amp;lt;dbl&amp;gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -… ## $ carrier &amp;lt;chr&amp;gt; &amp;#34;UA&amp;#34;, &amp;#34;UA&amp;#34;, &amp;#34;AA&amp;#34;, &amp;#34;B6&amp;#34;, &amp;#34;DL&amp;#34;, &amp;#34;UA&amp;#34;, &amp;#34;B6&amp;#34;, &amp;#34;EV&amp;#34;, &amp;#34;B6&amp;#34;, … ## $ flight &amp;lt;int&amp;gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, … ## $ tailnum &amp;lt;chr&amp;gt; &amp;#34;N14228&amp;#34;, &amp;#34;N24211&amp;#34;, &amp;#34;N619AA&amp;#34;, &amp;#34;N804JB&amp;#34;, &amp;#34;N668DN&amp;#34;, &amp;#34;N39… ## $ origin &amp;lt;chr&amp;gt; &amp;#34;EWR&amp;#34;, &amp;#34;LGA&amp;#34;, &amp;#34;JFK&amp;#34;, &amp;#34;JFK&amp;#34;, &amp;#34;LGA&amp;#34;, &amp;#34;EWR&amp;#34;, &amp;#34;EWR&amp;#34;, &amp;#34;LGA&amp;#34;… ## $ dest &amp;lt;chr&amp;gt; &amp;#34;IAH&amp;#34;, &amp;#34;IAH&amp;#34;, &amp;#34;MIA&amp;#34;, &amp;#34;BQN&amp;#34;, &amp;#34;ATL&amp;#34;, &amp;#34;ORD&amp;#34;, &amp;#34;FLL&amp;#34;, &amp;#34;IAD&amp;#34;… ## $ air_time &amp;lt;dbl&amp;gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, … ## $ distance &amp;lt;dbl&amp;gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733,… ## $ hour &amp;lt;dbl&amp;gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, … ## $ minute &amp;lt;dbl&amp;gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, … ## $ time_hour &amp;lt;dttm&amp;gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 …  총 19개의 변수들로 구성이 되어 있는 것을 확인 할 수 있다.</description>
    </item>
    
    <item>
      <title>ch04 - Modeling Visualisation</title>
      <link>https://dschloe.github.io/r/datavisualisation/ch04_modeling_visualisation/</link>
      <pubDate>Fri, 15 May 2020 11:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datavisualisation/ch04_modeling_visualisation/</guid>
      <description>개요  A picture is worth a thousand words — English Language Adage
  The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>Shiny App Deployment Using GCP</title>
      <link>https://dschloe.github.io/r/shiny/applications/gcp_shiny/</link>
      <pubDate>Sun, 10 May 2020 19:47:18 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/applications/gcp_shiny/</guid>
      <description>I. 개요 Google Data Studio는 놀랍도록 유연한 도구로서 마케팅 대행사 중 Google Analytics를 활용한 업체들은 대부분 항상 사용합니다. 때로는 유연성이 더 필요할 때 R &amp;rsquo;s Shiny 패키지를 사용하여 데이터 시각화 / 대시 보드 앱을 만드는 것이 매우 쉽습니다. 이 옵션을 사용하면 모든 소스의 데이터를 예측 모델링과 함께 사용할 수 있는 장점이 있습니다.
이 블로그 게시물은 3 부분으로 나누어져 있습니다.
 먼저 Google Cloud Virtual Machine (VM)을 설정하고 웹 액세스를 허용하도록 방화벽 규칙을 구성합니다.</description>
    </item>
    
    <item>
      <title>Basic Objects - Dataframe</title>
      <link>https://dschloe.github.io/r/basics/dataframe/</link>
      <pubDate>Wed, 06 May 2020 11:10:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/dataframe/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. DataFrame의 개요  본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
 데이터프레임은 서로 다른 성질의 벡터가 모여 있는 집합이라고 할 수 있다.1
(1) 데이터프레임 생성 이제 데이터프레임을 만들어보자. 어려운 것은 아니니 쉽게 따라 올 수 있을 것이다.</description>
    </item>
    
    <item>
      <title>ch03 - gghistostats</title>
      <link>https://dschloe.github.io/r/datavisualisation/ch03_gghistostats/</link>
      <pubDate>Mon, 04 May 2020 11:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datavisualisation/ch03_gghistostats/</guid>
      <description>Intro  A picture is worth a thousand words — English Language Adage The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>ch02 - Histogram</title>
      <link>https://dschloe.github.io/r/datavisualisation/ch02_histogram/</link>
      <pubDate>Sun, 03 May 2020 20:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datavisualisation/ch02_histogram/</guid>
      <description>Intro  A picture is worth a thousand words — English Language Adage The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>stackoverflow with dplyr 01 - mutate_all</title>
      <link>https://dschloe.github.io/r/datatransform/dplyr01_mutate_all/</link>
      <pubDate>Thu, 30 Apr 2020 10:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datatransform/dplyr01_mutate_all/</guid>
      <description>I. 개요 dplyr 문법에 관한 설명은 사실 차고 넘친다. 구체적인 설명은 하지 않겠다. Google이나 Naver에서 dplyr을 검색해보자! 검색하면 쉽게 정리된 글들이 많이 있다.
그런데, 실제 실무에서 다루는 데이터의 질과 양은 다 다르다. 데이터 가공은 결국 연구자의 환경에 따라 달라지는데, 조금 더 효과적으로 dplyr 문법을 사용하려면 결국엔 아이디어가 필요하고, 그리고 stackoverflow를 찾게 되어 있다. 집단 지성의 힘이랄까?
그래서 가급적, stackoverflow에 나와 있는 문제 중 재미있는 해결법 등을 소개하며 연재하려고 한다.
제 강의를 들으신 분들에게 작은 도움이 되기를 바랍니다.</description>
    </item>
    
    <item>
      <title>list handling</title>
      <link>https://dschloe.github.io/r/basics/list/</link>
      <pubDate>Wed, 29 Apr 2020 11:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/list/</guid>
      <description>I. 개요 모든 프로그래밍 언어에는 기본적으로 데이터타입이 존재한다. R도 프로그래밍 언어이기 때문에 데이터 타입의 일반적인 유형이 존재한다.
Vector의 기본 개념을 익혔다면, 전반적인 구조에 대해 살피는 시간을 갖도록 한다. 먼저 동일 성질의 Vector가 모여서 matrix도 되고, 데이터프레임도 된다. 그리고 이러한 다양한 데이터의 구조가 모여 리스트를 형성하는데,
리스트를 만드는 것도 중요한 건, 즉 이해다. 리스트에 접근법이 중요한데, 리스트를 잘 다루면, apply 함수 계열을 사용하는데도 큰 도움이 된다.
특히, 100GB 이상의 데이터를 다루게 되면, apply() 함수로 작업해야 하는 일이 종종 발생한다.</description>
    </item>
    
    <item>
      <title>vcrts01 - Combining Vectors</title>
      <link>https://dschloe.github.io/r/datatransform/vcrts01/</link>
      <pubDate>Tue, 28 Apr 2020 10:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datatransform/vcrts01/</guid>
      <description>I. 개요 vctrs 패키지. Vector Helpers 패키지1라고 불리운다. 벡터를 활용할 때, 어려운 부분은 데이터와 조합해서 사용할 때다. 특히 서로다른 성질의 Vectors를 Combining 할 때 발생하는 에러에 대해 효과적으로 해결할 수 있는 대안을 제시한다.
II. Vectors 벡터에 관한 기초 부분은 여기에서 생략하고, 필자가 작성한 기초 부분에서 참조하기를 바란다.
 Basci Objects  (1) 벡터의 정의 R의 기본문법에서 벡터의 정의는 다음과 같다.
c(1, 2, 3) ## [1] 1 2 3 c(&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;) ## [1] &amp;quot;a&amp;quot; &amp;quot;b&amp;quot; &amp;quot;c&amp;quot; (2) tidyverse 벡터와 관련되어서 일반적으로 다음과 같은 함수에서 넓게 활용된다.</description>
    </item>
    
    <item>
      <title>Ch03 Components of Process Data</title>
      <link>https://dschloe.github.io/r/dataanalysis/process_analysis/ch03_components_of_process_data/</link>
      <pubDate>Mon, 27 Apr 2020 23:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/dataanalysis/process_analysis/ch03_components_of_process_data/</guid>
      <description>I. 개요 지난시간에 patients에 관한 데이터를 통해서 프로세스 분석에 대한 일반적인 개념을 접했다.
이번 포스트에서는 bupaR에 대한 이론적인 내용과 함께 간단하게 실습을 진행하도록 한다.
지난시간과 마찬가지로 먼저 데이터를 획득하는 것에서부터 출발한다.
library(bupaR) library(eventdataR) patients &amp;lt;- patients dim(patients) ## [1] 5442 7 5442행과 7개의 열이 확인되었다.
class(patients) ## [1] &amp;quot;eventlog&amp;quot; &amp;quot;tbl_df&amp;quot; &amp;quot;tbl&amp;quot; &amp;quot;data.frame&amp;quot; II. 용어 정리 우선 용어 정리가 필요하다. Events, Event log, Activity 등등. 하나씩 살펴보자.
(1) Events 우선 Events에 관한 이해를 돕기 위해 아래 그림을 우선 살펴보자.</description>
    </item>
    
    <item>
      <title>More on Vectors and Indexing</title>
      <link>https://dschloe.github.io/r/basics/more_vectors_indexing/</link>
      <pubDate>Sun, 26 Apr 2020 16:10:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/more_vectors_indexing/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. 벡터  본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
 현재 진행중인 R 기초문법은 아래와 같습니다. 원하시는 것은 참조해서 가볍게 공부하시기를 바랍니다.
 Basic Objects - Vector  벡터(Vector). R에서 다루는 가장 작은 단위값의 데이터다.</description>
    </item>
    
    <item>
      <title>Basic Objects - Vector</title>
      <link>https://dschloe.github.io/r/basics/basic_objects_vector/</link>
      <pubDate>Sat, 25 Apr 2020 18:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/basic_objects_vector/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. 벡터  본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
 벡터(Vector). R에서 다루는 가장 작은 단위값의 데이터다. 1차원으로 구성이 되어 있다.
(1) 4가지 벡터 크게 4가지의 벡터가 존재한다. 간단하게 코드를 작성해보자.
xNum &amp;lt;- c(1, 3.</description>
    </item>
    
    <item>
      <title>Ch02 Process Analysis Basic</title>
      <link>https://dschloe.github.io/r/dataanalysis/process_analysis/ch02_process_analysis_basic/</link>
      <pubDate>Thu, 23 Apr 2020 23:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/dataanalysis/process_analysis/ch02_process_analysis_basic/</guid>
      <description>I. 개요 지난시간에 patients에 관한 데이터를 통해서 프로세스 분석에 대한 일반적인 개념을 접했다.
이번 포스트에서는 bupaR에 대한 이론적인 내용과 함께 간단하게 실습을 진행하도록 한다.
지난시간과 마찬가지로 먼저 데이터를 획득하는 것에서부터 출발한다.
library(bupaR) library(eventdataR) patients &amp;lt;- patients dim(patients) ## [1] 5442 7 5442행과 7개의 열이 확인되었다.
class(patients) ## [1] &amp;quot;eventlog&amp;quot; &amp;quot;tbl_df&amp;quot; &amp;quot;tbl&amp;quot; &amp;quot;data.frame&amp;quot; 그리고, 데이터는 eventlog, tbl_df, data.frame으로 구성된 것을 확인할 수 있다. 기존에 R을 학습한 사람들은 tbl &amp;amp; data.frame에 대해서 한두번쯤 들었을 거라 생각한다.</description>
    </item>
    
    <item>
      <title>Ch01 Process Analysis Intro</title>
      <link>https://dschloe.github.io/r/dataanalysis/process_analysis/ch01_process_analysis_intro/</link>
      <pubDate>Mon, 20 Apr 2020 21:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/dataanalysis/process_analysis/ch01_process_analysis_intro/</guid>
      <description>I. Process Mining Intro 모든 비즈니스는 프로세스와 연관이 깊다. 이러한 데이터를 통상적으로 event라고 부르며, 다루는 데이터는 log 데이터와 연관이 깊다. 프로세스 마이닝(Process Mining)은 데이터의 추출, 프로세싱, 그리고 분석의 순으로 진행한다.
 데이터 추출 (Extraction): Raw Data를 Event Data로 변환시킨다. 프로세싱 (Processing): 데이터 가공과 비슷하며, 보통 Aggregation, Filtering, Enrichment의 용어가 등장한다. 분석 (Analysis): Performance, Control-Flow 등과 연관된 분석이 진행된다.  우선 빠르게 시각화부터 진행해보자.
library(bupaR) library(httr) library(processmapR) library(edeaR) url &amp;lt;- &amp;#39;https://github.com/chloevan/datasets/blob/master/log/log_eat_patterns.RDS?raw=true&amp;#39; patterns &amp;lt;- readRDS(url(url)) trace_explorer(patients, coverage=1) 위 그래프에 대한 해석은 나중에 하더라도, 위 데이터를 보면, Rgst아 TraA는 공통으로 존재하고, 경로에 따라서 X-Ray, Blood Test에 나뉘는 걸 봐서는 환자의 경로에 관한 데이터임을 알 수 있다.</description>
    </item>
    
    <item>
      <title>R 시각화 튜토리얼 Intro</title>
      <link>https://dschloe.github.io/r/datavisualisation/ch01_intro/</link>
      <pubDate>Sun, 19 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datavisualisation/ch01_intro/</guid>
      <description>Intro  A picture is worth a thousand words — English Language Adage The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>Shiny 프로젝트 Review &amp; 더 알아볼 것</title>
      <link>https://dschloe.github.io/r/shiny/project_final/</link>
      <pubDate>Sat, 18 Apr 2020 17:15:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_final/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 6_2 - Chart Automation</title>
      <link>https://dschloe.github.io/r/shiny/project_06_02/</link>
      <pubDate>Sat, 18 Apr 2020 14:15:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_06_02/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Round 함수 - digits</title>
      <link>https://dschloe.github.io/r/basics/round/</link>
      <pubDate>Fri, 17 Apr 2020 10:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/round/</guid>
      <description>Round 함수 소개 round 함수는 대개 소수점 자리에서 반올림 할 때 자주 쓰는다.
test &amp;lt;- c(1.24, 2.40, 3.56, 4.56) round(test, digits = 1) ## [1] 1.2 2.4 3.6 4.6 digits = 1의 의미는 소수점 첫번째 자리에서 반올림 하라는 뜻이다.
그런데 digits = -1을 하게 되면 어떻게 될까?
정수 반올림 빠르게 실습을 해보자.
test2 &amp;lt;- c(-14, -26, 14, 26, 39, 124, 247) round(test2, digits = -1) ## [1] -10 -30 10 30 40 120 250 digits = -1을 하게되면 정수의 첫번째 자리에서 반올림한다.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 6_1 - 데이터 전처리</title>
      <link>https://dschloe.github.io/r/shiny/project_06_01/</link>
      <pubDate>Tue, 14 Apr 2020 10:15:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_06_01/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>GT 패키지 소개</title>
      <link>https://dschloe.github.io/r/newpkgs/gt_intro/</link>
      <pubDate>Mon, 13 Apr 2020 00:21:01 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/newpkgs/gt_intro/</guid>
      <description>공지 본 블로그는 2020-04-08에 소개된 Great Looking Tables: gt(v0.2) by Richard Iannone 글을 번역한 것이다. 함수와 관련된 설명은 가급적 원어를 직접 인용 했으니, 영어로 직접 함수의 사용처를 음미하시길 바란다.
I. Intro gt라는 이름은 grammar of tables즉 &amp;ldquo;테이블의 문법&amp;quot;의 줄임말이며 gt의 목표는 ggplot2와 비슷하게 운영하는 것이다. 특정 테이블을 쉽게 만들 수 있을 뿐만 아니라 다양한 문제를 해결하기 위해 서로 다른 방법으로 재결합할 수 있는 기본 구성요소 집합을 기술하는 역할을 한다.
R 사용자가 맞춤형(customized) 테이블을 R Markdown에서 만들 필요가 있다면, gt 패키지가 그 과정에 도움을 줄 것이다.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 5 - Chart with DateInput</title>
      <link>https://dschloe.github.io/r/shiny/project_05/</link>
      <pubDate>Sat, 11 Apr 2020 10:15:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_05/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 4 - Visusalization (Map Chart)</title>
      <link>https://dschloe.github.io/r/shiny/project_04/</link>
      <pubDate>Thu, 09 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_04/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 3 - Visusalization (Bubble Chart)</title>
      <link>https://dschloe.github.io/r/shiny/project_03/</link>
      <pubDate>Wed, 08 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_03/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 2 - Visusalization (Time Series)</title>
      <link>https://dschloe.github.io/r/shiny/project_02/</link>
      <pubDate>Tue, 07 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_02/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project I - Get Data</title>
      <link>https://dschloe.github.io/r/shiny/project_01/</link>
      <pubDate>Mon, 06 Apr 2020 09:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_01/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 08 - HTML, CSS 적용</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_08/</link>
      <pubDate>Sun, 05 Apr 2020 11:30:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_08/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 07 - flexdashboard package</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_07/</link>
      <pubDate>Thu, 02 Apr 2020 21:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_07/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 06 - shinydashboard package</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_06/</link>
      <pubDate>Wed, 01 Apr 2020 17:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_06/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 05 - Sharing Apps</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_05/</link>
      <pubDate>Tue, 31 Mar 2020 01:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_05/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts  II. Shiny Deployment의 개요 이 영역은 웹개발자에게는 매우 쉬운 영역일 수도 있다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 04 - Layouts</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_04/</link>
      <pubDate>Sun, 29 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_04/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content  II. Layouts의 개요 이번 시간에는 Shiny Layouts 개요에 대한 간략적인 소개를 하려고 한다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 03 - HTML content</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_03/</link>
      <pubDate>Fri, 27 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_03/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure  II. HTML Content 개요 이번 시간에는 HTML Content 개요에 대한 간략적인 소개를 하려고 한다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 02 - Shiny Structure</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_02/</link>
      <pubDate>Sun, 22 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_02/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny 소개 지난시간에 Shiny에 관한 대략적인 소개를 했다. 처음 이 페이지를 방문한 사람들 위해 shiny tutorial 01 - get started 에서 짧게 확인하기를 바란다.
II. Shiny App Structure 아래 샘플 코드를 확인하자.
# load the shiny package library(shiny) # 화면 구성 (UI) - 프론트엔드 ui &amp;lt;- fluidPage( numericInput(inputId = &amp;#34;n&amp;#34;, label = &amp;#34;Sample size&amp;#34;, value = 25), plotOutput(outputId = &amp;#34;hist&amp;#34;) ) # 서버 구성 - 벡엔드 server &amp;lt;- function(input, output) { output$hist &amp;lt;- renderPlot({ hist(rnorm(input$n)) # 결과물을 만들어내는 코드 작성 }) } # shiny app 호출 # 프로젝트 진행 시, 폴더 안에 # 파일명은 app.</description>
    </item>
    
    <item>
      <title>shiny tutorial 01 - get started</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_01/</link>
      <pubDate>Sat, 21 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_01/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny 소개 Shiny는 R에서 제공하는 일종의 Web Framework이다. 기존 웹사이트와 다르게, 주요 목적은 데이터를 활용해서 대시보드를 만드는 것에 초점이 맞춰져 있다.
가장 큰 장점은 무료로 빠른 프로토타입을 만들 수 있고, HTML, CSS, Javascript와 직접적으로 호환이 되기 때문에 무한한 확장성이 있다. 바로 중급 레벨에서 배우고 싶으시다면 Intermediate Level을 클릭한다.</description>
    </item>
    
    <item>
      <title>R Markdown Introduction</title>
      <link>https://dschloe.github.io/r/rmarkdown/rmarkdownintro/</link>
      <pubDate>Wed, 18 Mar 2020 13:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/rmarkdown/rmarkdownintro/</guid>
      <description>R Markdown 소개 및 환경설정 데이터 분석가의 주요 업무 중의 하나는 향후에 참고자료로 활용하기 위해 작업결과를 문서화 해야 하는데, 상당량의 보고서를 작성해서 분석과정과 출력결과를 기술해야만 합니다.
보통의 과정은 아래과 같을 것입니다.
 1단계: 본인의 작업을 위해서 R 스크립트 작성 2단계: 다양한 그래프가 첨부된 분석결과를 Word, PPT 분석결과를 기술해서 동료 또는 메신저로 분석결과 전송 3단계: 분석결과 토의 4단계: 각각의 그래프 결과 코드를 매칭하기 위한 작업이 토의 중 발생 5단계: 혼란 및 불필요한 시간 소요 발생  그런데, 해당 작업물을 그 때 마다 웹페이지(HTML)을 생성하여 자체 서버내 구축할 수 있다면, 그러면 위 5단계의 과정을 3단계(소스코드 작성 -&amp;gt; 웹 게시 -&amp;gt; 분석결과 토의)로 축소할 수가 있을 것이며 특히, 연구자가 분석 당시의 고민과 문제점들을 스크롤링과 함께 같이 고민할 수 있는 시간으로 빠져들 수 있도록 유도할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Leaflet for R</title>
      <link>https://dschloe.github.io/r/graph01_leaflet/</link>
      <pubDate>Tue, 17 Mar 2020 20:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/graph01_leaflet/</guid>
      <description>1. Introduction Leaflet 패키지는 동적 지도 시각화를 위한 자바스크립트-오픈소스 기반 라이브러리입니다. 일반적인 기업 회사 뿐만 아니라 GIS 전문 회사인 OpenStreetMap, Mapbox, 그리고 CartoDB에서도 이 패키지를 사용하고 있습니다.
R의 leaflet 패키지는 일종의 자바스크립트의 Leaflet을 쉽게 연동(Integrate) 할 수 있도록 도와 주는 패키지입니다.
2. Features 패키지의 주요 특징은 아래와 같습니다. 오역 방지를 위해 원문에 있는 내용을 그대로 사용했습니다.
  Interactive panning/zooming
  Compose maps using arbitrary combinations of:
 Map tiles Markers Polygons Lines Popups GeoJSON    Create maps right from the R console or RStudio</description>
    </item>
    
    <item>
      <title>Tensorflow For R - Quick Start</title>
      <link>https://dschloe.github.io/r/settings01_installation/</link>
      <pubDate>Mon, 16 Mar 2020 20:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/settings01_installation/</guid>
      <description>1. 개요 (Overview) tensorflow(텐서플로) R 패키지를 사용하기 전에 시스템에 TensorFlow 버전을 설치해야 한다. 아래에서는 TensorFlow 설치 방법과 설치 사용자 정의에 사용할 수 있는 다양한 옵션에 대해 설명 한다.
이번 포스트에서는 주로 R install_tensorflow() 함수의 사용을 다루며, 이는 TensorFlow를 설치하는 데 필요한 다양한 단계에서 wrapper 쉽게 사용할 수 있도록 도와 준다.
Tensorflow(텐서플로)는 아래와 같은 OS 환경에서 구동이 된다.
 Ubuntu 16.04 or later Windows 7 or later macOS 10.12.6 (Sierra) or later (no GPU support)  2.</description>
    </item>
    
    <item>
      <title>PLS-SEM에서 중요 용어 비교</title>
      <link>https://dschloe.github.io/r/stat01_hypothesis/</link>
      <pubDate>Sun, 15 Mar 2020 21:23:58 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/stat01_hypothesis/</guid>
      <description>개요  PLS-SEM에서의 가설 설정은 선행연구의 검토과정을 통해서 이루어지며 귀무가설은 기술하지 않고 대립가설을 중심으로 설정한다. 연구가설은 방향적 검증(Directional Test)와 비방향적 검증(Non-Directional Test)으로 구분한다.  </description>
    </item>
    
  </channel>
</rss>
