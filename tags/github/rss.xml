<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/github/</link>
    <description>Recent content in Github on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Oct 2023 15:00:30 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/github/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BigQuery Connect to Google Analytics</title>
      <link>https://dschloe.github.io/gcp/2023/10/bigquery_to_ga4/</link>
      <pubDate>Thu, 26 Oct 2023 15:00:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/2023/10/bigquery_to_ga4/</guid>
      <description>개요 BigQuery에서 Google Adwords 데이터와 Google Analytics를 불러올 수 있다. 전제조건 구글 클라우드 사용법은 어느정도 알고 있는 상태를 전제로 한다. Google Analytics를 이미 활용하고 있다는 것을 전제로 한다. Google Analytics 왼쪽 메뉴에서 관리 &amp;gt; 제품 링크를 확인한다. BigQuery 링크 클릭 &amp;gt; 연결 버튼을 클릭한다. BigQuery 프로젝트를 선택한다. 활성화중인 프로젝트를 선택한다. 데이터 위치를 지정한다. 본 프로젝트에서는 서울로 명명한다. 내보내기 유형은 매일로 선택한다. 사용자 데이터는 일별로 선택한다. 검토 후 제출 화면에서 특별한 이의사항이 없으면 보내기 버튼을 클릭한다.</description>
    </item>
    
    <item>
      <title>Streamlit App Deployment Compute Engine with Github Action in GCP</title>
      <link>https://dschloe.github.io/gcp/2023/10/streamlit_gcp_githubaction/</link>
      <pubDate>Wed, 25 Oct 2023 10:00:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/2023/10/streamlit_gcp_githubaction/</guid>
      <description>개요 Google Compute Engine에서 Gihub Action을 구현하도록 한다. 프로젝트 생성 새 프로젝트 버튼을 클릭 후 프로젝트 명을 streamlit-gitaction으로 명명한다. Instance 생성 Compute Engine &amp;gt; VM Instance 선택 후, 새로운 인스턴스를 생성한다. 처음 사용하는 경우 사용 버튼을 클릭한다. 최초 작업에는 결제 필요 버튼이 나올 수 있다. 결제 사용 설정을 눌러 결제를 추가한다. 필자는 회사 계정을 사용한 것이므로 이렇게 나오지만, 일반 사용자는 화면이 다를 수 있다. VM 인스턴스를 생성한다. 인스턴스 이름과 리전과 영역은 다음과 같이 진행한다.</description>
    </item>
    
    <item>
      <title>Compute Engine with Github in GCP</title>
      <link>https://dschloe.github.io/gcp/2023/09/compute_engine_github/</link>
      <pubDate>Tue, 19 Sep 2023 14:00:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/2023/09/compute_engine_github/</guid>
      <description>개요 Google Cloud Project에서 Github 계정을 연동하는 과정을 보여준다. 처음 GCP를 사용하는 독자분들은 이전 글을 참조해서 설정을 먼저 진행한다. 참조 : https://dschloe.github.io/gcp/2023/09/spark_installation_gcp/ 터미널 열기 기존 인스턴스는 중지를 시켰기 때문에 이를 다시 시작/재개 버튼을 눌러 활성화 한다. 시작 버튼 클릭과 함께 오늘도 비용을 지불해본다. 브라우저 창에서 열기를 진행한다. Git 설치 터미널에 Git을 설치하는 방법은 다음 명령어를 순차적으로 입력한다. (base) ~$ sudo apt-get update -y (base) ~$ sudo apt-get upgrade -y (base) ~$ sudo apt install git (base) ~$ git --version Git Repo 생성 Github에서 Repo를 만든다.</description>
    </item>
    
    <item>
      <title>(R&#43;Git) 초보자를 위한 깃허브 연동 및 에러 대처법</title>
      <link>https://dschloe.github.io/settings/rstudio_git_beginner/</link>
      <pubDate>Tue, 06 Oct 2020 09:11:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/rstudio_git_beginner/</guid>
      <description>개요 본 Repo는 강림직업전문학교 수강생을 위해 예시로 작성한 Repo입니다. 본 Repo에서는 R을 활용한 데이터 과학 발표자료를 공유하기 위해 만들어졌습니다. Git &amp;amp; Github 우선 Git을 설치합니다.
싸이트: https://git-scm.com/ 설정은 모두 기본 값으로 해주시기 바랍니다. Terimnal 창에서 git을 실행하여 정상적으로 설치되었는지 유무를 확인합니다.
그 다음은 Github에 회원가입을 합니다
저장소를 만드는 과정은 아래 싸이트를 참조바랍니다. 싸이트: https://goddaehee.tistory.com/221 이제 RStudio에서 프로젝트를 클릭한 후 아래 화면에서 Version Control을 클릭합니다.
그 다음은 github에서 주소를 클릭합니다. 복사한 주소를 아래그림과 같이 주소를 붙여 넣습니다.</description>
    </item>
    
    <item>
      <title>Github에 Daily 코딩 설정</title>
      <link>https://dschloe.github.io/settings/daily_coding/</link>
      <pubDate>Sat, 09 May 2020 10:00:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/daily_coding/</guid>
      <description>I. Motivation 오늘은 데이터 분석과 크게 관련이 없는 포스팅을 해보자. 오늘 깃허브에 꾸미려고 하는 것은 아래와 같다.
주로 깃허브를 올리는 시간은 언제인가? 그저 단순 재미로 포스팅을 해본다.
II. Prep Work 첫번째, Gist를 클릭하여 활성화를 합니다. (https://gist.github.com/) 두번째, 이제 토큰을 생성하자. 이 때 중요한 것은 rest &amp;amp; gist를 클릭한 뒤 생성을 해야 한다. (https://github.com/settings/tokens/new) Note에는 토큰 생성 목적을 기재하면 된다. (필자는 Productivity Box)라고 했다. Select Scope에서 rest &amp;amp; gist를 아래 그림과 같이 클릭하자.</description>
    </item>
    
  </channel>
</rss>
