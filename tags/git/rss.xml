<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/git/</link>
    <description>Recent content in Git on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Apr 2022 15:11:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/git/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo 깃허브 블로그 - Windows (2022)</title>
      <link>https://dschloe.github.io/settings/hugo_github_windows/</link>
      <pubDate>Sun, 17 Apr 2022 15:11:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/hugo_github_windows/</guid>
      <description>패키지 관리자 설치 Chocolatey (Windows)  If you are on a Windows machine and use Chocolatey for package management, you can install Hugo with the following one-liner: 우선 PowerShell을 관리자로 실행 후, 아래와 같이 Chocolately를 설치한다.  명령어 : Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#39;[https://community.chocolatey.org/install.ps1](https://community.chocolatey.org/install.ps1)&#39;))    Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved. 새로운 크로스 플랫폼 PowerShell 사용 https://aka.ms/pscore6 PS C:\WINDOWS\system32&amp;gt; Set-ExecutionPolicy Bypass -Scope Process -Force; [System.</description>
    </item>
    
    <item>
      <title>Hexo Blog 재연결</title>
      <link>https://dschloe.github.io/settings/hexo_blog_reconnected/</link>
      <pubDate>Fri, 26 Nov 2021 14:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/hexo_blog_reconnected/</guid>
      <description>문제점  몇몇 수강생이 노트북과 데스트탑 자리 모두에서 깃헙 블로그를 운영하고 싶어함. 또한, 기존에 올라간 블로그 소스를 그대로 사용하고 싶어함. 그런데, 제대로 반영이 안되는 경우가 있음.  해결책  그런 경우 아래와 같이 순차적으로 진행하면 된다.  $ hexo init your_blog_repo # 여기는 각자 소스 레포 확인 $ cd myblog $ git init $ git remote add origin https://github.com/your_name/your_blog_repo.git # 각자 소스 레포 주소  아래 명령어에서 에러가 발생이 있다.  $ git pull --set-upstream origin main # 에러 발생  그런 경우, 아래 명령어를 추가한다.</description>
    </item>
    
    <item>
      <title>왜 Git 그래프가 채워지지 않는가?</title>
      <link>https://dschloe.github.io/settings/git_commit_issue/</link>
      <pubDate>Mon, 29 Mar 2021 15:11:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/git_commit_issue/</guid>
      <description>1줄 요약  이메일을 확인하자.  개요  필자는 강의를 위해 깃헙 계정이 여러개가 존재함 강사용 PC에서 지속적으로 Commit을 진행했으나 Github 그래프가 출력이 되지 않는 오류 발생을 해결하는 과정에서 확인  Github 질의   Why are my contributions not showing up on my profile? 이런 글이 있습니다.
  그러나, 제 경우에는 제 개인 PC는 반영이 잘 되고, 강사 PC에는 안되는 상황이어서, 맞지 않은 케이스였습니다.
  왜? 공통 이유 중의 하나는 이메일  이 때, 가장 중요한 것은 이메일입니다.</description>
    </item>
    
    <item>
      <title>CI CD Pipeline for Data Science</title>
      <link>https://dschloe.github.io/settings/ci_cd_pipeline/</link>
      <pubDate>Tue, 02 Mar 2021 16:31:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/ci_cd_pipeline/</guid>
      <description>개요  최근 밑바닥부터 시작하는 딥러닝 3로 수업을 수강생들과 진행하며 배포에 관한 내용이 있었습니다. (p 98). 구체적인 방법은 소개하지 않아서, 보충 자료로 작성하였다. 전 단계별로 진행하는데, 깃허브에 관한 기본적인 내용 및 코드는 알고 있다는 전제하에 작성하였다.  깃허브를 처음 접하시는 분들은 Github Project 포트폴리오를 참고하기를 바란다.    필요한 것  Github: https://github.com/ Travis-CI: https://www.travis-ci.com/ Codecov: https://about.codecov.io/ PyPI: https://pypi.org/  Steps - Travis Logins   Travis에 깃허브로 로그인 한다.</description>
    </item>
    
    <item>
      <title>Hugo Blog 옮기기</title>
      <link>https://dschloe.github.io/settings/hugo_blog/</link>
      <pubDate>Wed, 30 Dec 2020 17:11:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/hugo_blog/</guid>
      <description>개요  새로운 맥을 구입하면서 생긴 여러 에러를 해결하면서 기록으로 남겼다.  선수 학습  본 포스트는 기존 hugo 깃허브 블로그를 운영중인 독자들을 위한 글이다. 만약 깃허브 블로그를 처음 만드시는 분은 공식 홈페이지를 참조하기를 바란다.  https://gohugo.io/getting-started/installing/    기존 블로그 활용  필자는 blog라는 깃허브 repo가 존재하였음 따라서, blog 레포를 내려 받았다.  $ git clone https://github.com/yourname/your_repo.git 상황 1. submodule에 대한 충분하지 못한 이해  필자가 실수한 것이 있다.</description>
    </item>
    
    <item>
      <title>Git 명령어 중급편</title>
      <link>https://dschloe.github.io/settings/git_intermediate/</link>
      <pubDate>Tue, 22 Dec 2020 21:11:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/git_intermediate/</guid>
      <description>개요  커밋을 하기 전에 확인해야 할 기본적인 명령어 등을 확인해본다. tracked 상태의 파일을 untracked 상태로 변경하는데, 스테이지에 등록하는 것과 반대 과정이라고 보면 된다. stage 상태에 있는 것을 unstage 상태로 변경하려면 삭제(rm)나 리셋(reset) 명령어를 사용한다.  파일 등록 취소  rm 명령어로 삭제 하려면, 기억해야 하는 것은 스테이지 영역에서만 등록된 파일을 삭제하려면 --cached 옵션을 함께 사용한다.  $ git rm --cached main.py rm &amp;#39;main.py&amp;#39;  캐시 목록에서 파일이 삭제가 된 이후에 git status를 실행해본다.</description>
    </item>
    
    <item>
      <title>Git 명령어 기본편</title>
      <link>https://dschloe.github.io/settings/git_basic/</link>
      <pubDate>Mon, 21 Dec 2020 21:11:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/git_basic/</guid>
      <description>개요  깃 명령어의 기본적인 명령어를 실행하는 것을 목표로 한다. 깃 설치 및 깃허브 설치는 기존 게시글을 확인해본다.  Github Project 포트폴리오    Git 환경설정  git 명령어를 입력 시, 제대로 실행되지 않았다면 환경변수를 추가한다.  윈도우에서 제어판을 실행한 후 시스템 &amp;gt; 고급 시스템 설정 &amp;gt; 고급 &amp;gt; 환경 변수를 작성한다.   시스템 변수 항목에서 Path를 더블클릭하도록 한다. 환경 변수 편집 창에 C:\Program Files\Git\cmd 경로를 추가한다.  영상을 통해서 한번 보도록 한다.</description>
    </item>
    
    <item>
      <title>(R&#43;Git) 초보자를 위한 깃허브 연동 및 에러 대처법</title>
      <link>https://dschloe.github.io/settings/rstudio_git_beginner/</link>
      <pubDate>Tue, 06 Oct 2020 09:11:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/rstudio_git_beginner/</guid>
      <description>개요  본 Repo는 강림직업전문학교 수강생을 위해 예시로 작성한 Repo입니다. 본 Repo에서는 R을 활용한 데이터 과학 발표자료를 공유하기 위해 만들어졌습니다.  Git &amp;amp; Github   우선 Git을 설치합니다.
 싸이트: https://git-scm.com/ 설정은 모두 기본 값으로 해주시기 바랍니다.    Terimnal 창에서 git을 실행하여 정상적으로 설치되었는지 유무를 확인합니다.
  그 다음은 Github에 회원가입을 합니다
 저장소를 만드는 과정은 아래 싸이트를 참조바랍니다.  싸이트: https://goddaehee.tistory.com/221      이제 RStudio에서 프로젝트를 클릭한 후 아래 화면에서 Version Control을 클릭합니다.</description>
    </item>
    
    <item>
      <title>Github Project 포트폴리오</title>
      <link>https://dschloe.github.io/settings/github_settings/</link>
      <pubDate>Tue, 07 Jul 2020 13:11:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/github_settings/</guid>
      <description>개요  본 포스트는 깃허브 프로젝트 관리에 관한 것이다.  I. 프로필 작성하기  이력서에 준하는 프로필 또는 유니크한 것을 살리는 것이 좋다. 깔끔한 정장을 입고, 이쁘게 화장을 하고, 면접을 보러가듯이 인사담당자가 보는 이로 하여금 좋은 인상을 심어줘야 한다. 성명, 이메일, 전화번호 등은 가급적 자세하게 기록해두는 것이 좋다. 프로젝트는 현재 진행중인 Pinned Repositories 상위 3~4개 정도 올려 놓는 것이 좋다.   만약에 현재 기여하는 오픈 소스 리퍼지토리가 있다면 반드시 메인 화면에 고정시킨다.</description>
    </item>
    
  </channel>
</rss>
