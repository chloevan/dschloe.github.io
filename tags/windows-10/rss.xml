<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows 10 on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/windows-10/</link>
    <description>Recent content in Windows 10 on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Oct 2022 14:00:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/windows-10/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Installation in Windows</title>
      <link>https://dschloe.github.io/settings/2022/10/docker_windows/</link>
      <pubDate>Sat, 29 Oct 2022 14:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/2022/10/docker_windows/</guid>
      <description>사전 준비 WSL2가 설치가 되어 있어야 한다. 참고 : https://dschloe.github.io/settings/wsl2_install_on_windows/ 도커 설치 해당 싸이트에 접속한다. (참조 : https://www.docker.com/products/docker-desktop/) 관리자 권한으로 실행 설치가 완료가 되면 Close and Log Out 버튼이 나오면 클릭하면 윈도우 로그아웃이 진행되기 때문에, 다시 재 로그인을 하도록 한다. 아래 그림 메뉴 우측 상단에 Sign In 버튼을 클릭해 로그인을 한다. 도커 Settings 창에 들어가서 아래 그림처럼 변경후 Apply &amp;amp; Restart 버튼을 클릭한다. 테스트 PowerShell에서 도커 명령어가 실행되는지 확인한다. PS C:\Users\h&amp;gt; docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES PS C:\Users\h&amp;gt; docker --version Docker version 20.</description>
    </item>
    
    <item>
      <title>Apache NiFi 설치와 설정 in WSL2</title>
      <link>https://dschloe.github.io/settings/apache_nifi_wsl2/</link>
      <pubDate>Tue, 12 Apr 2022 14:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/apache_nifi_wsl2/</guid>
      <description>설치 wsl2에서 JAVA 설치 한다. $ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade $ sudo apt install openjdk-11-jre-headless $ vi ~/.bash_profile export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64 curl을 이용해서 NiFi를 현재 경로에 내려받는다. $ sudo wget https://downloads.apache.org/nifi/1.16.0/nifi-1.16.0-bin.tar.gz .tar.gz 파일의 압축을 푼다. $ sudo tar xvzf nifi-1.16.0-bin.tar.gz 압축파일을 푼 다음에는 cd nifi-1.16.0 폴더에 접속을 한다. $ cd nifi-1.16.0/bin ls를 실행해서 nifi-env.sh 파일이 있는지 확인하고 있다면, vi 에디터로 연다. .bash_profile에서 한 것처럼 동일하게 자바 환경변수를 잡아준다. $ sudo vi nifi-env.</description>
    </item>
    
    <item>
      <title>ElasticSearch &amp; Kibana 설치 in WSL2</title>
      <link>https://dschloe.github.io/settings/elasticsearch_kibana_wsl2/</link>
      <pubDate>Mon, 11 Apr 2022 11:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/elasticsearch_kibana_wsl2/</guid>
      <description>Step 1. 사전 필수 패키지 설치 우선 시스템 패키지를 업데이트 하고, HTTPS와 관련된 패키지를 설치한다. $ sudo apt update $ sudo apt install apt-transport-https 자바를 설치한다. 이미 설치가 되어 있다면 버전만 확인한다. $ sudo apt install openjdk-11-jdk 설치한 버전을 확인한다. $ java -version openjdk version &amp;#34;11.0.14.1&amp;#34; 2022-02-08 OpenJDK Runtime Environment (build 11.0.14.1+1-Ubuntu-0ubuntu1.20.04) OpenJDK 64-Bit Server VM (build 11.0.14.1+1-Ubuntu-0ubuntu1.20.04, mixed mode, sharing) 자바 환경 변수를 설정하기 위해 아래와 같이 에디터를 입력한다. $ sudo vi /etc/environment 그리고 아래와 같이 추가한다.</description>
    </item>
    
    <item>
      <title>VSCode Remote WLS 연동</title>
      <link>https://dschloe.github.io/settings/vscode_wsl2/</link>
      <pubDate>Sat, 09 Apr 2022 14:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/vscode_wsl2/</guid>
      <description>VSCode 설치 우선 VSCode를 설치한다. URL : https://code.visualstudio.com/download 이 때, 관리자로 실행할 것이기 때문에 System Installer를 다운로드 받는다. 설치 시, 환경변수 체크란만 잘 확인한다. 설치가 다 끝난 후에는 재부팅을 실시한다. Remote WSL 연동 Extension 버튼을 클릭한다. 검색창에서 Remote WSL을 검색 후, 설치를 진행한다. 모두 클릭 후, Mark Done을 선택한다. Open Folder를 클릭한다. WSL에서 설치했던 airflow-test 폴더를 선택한다. 해당 프로젝트를 열도록 한다. 메뉴바에 Terminal을 선택 후, 화면 하단에서 WSL이 있는지 확인한다. 해당 메뉴를 클릭하면 아래와 같이 터미널이 변경된 것을 확인할 수 있다.</description>
    </item>
    
    <item>
      <title>Setting up Apache-NiFi in Windows 10</title>
      <link>https://dschloe.github.io/settings/apache_nifi_installation_windows/</link>
      <pubDate>Thu, 07 Apr 2022 14:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/apache_nifi_installation_windows/</guid>
      <description>개요 윈도우에서 NiFi를 설치해본다. NiFi를 설치하기 위해서는 자바 설치가 필요하다. Step 01. NiFi 다운로드 먼저 웹사이트에 접속한다. URL : https://www.apache.org/dyn/closer.lua?path=/nifi/1.16.0/nifi-1.16.0-bin.zip /img/settings/apache_nifi_installation_windows
가장 먼저 나오는 링크를 클릭한다. URL : https://dlcdn.apache.org/nifi/1.16.0/nifi-1.16.0-bin.zip 다운로드 받은 파일의 압축을 풀도록 한다. Step 02. Java 환경 설정 Java 설치 내용은 아래 블로그를 참조한다. 참고자료 : https://maktony.tistory.com/13 Step 03. run-nifi 배치 파일 실행 run-nifi 배치파일을 관리자 권한으로 실행한다. 아래와 같은 메시지가 출력이 되면 성공한 것이다. Step 04. Web UI 확인 (약 1분이 지난 후) Web UI를 확인해본다.</description>
    </item>
    
    <item>
      <title>Setting up Apache-Airflow in Windows using WSL2</title>
      <link>https://dschloe.github.io/settings/apache_airflow_using_wsl2/</link>
      <pubDate>Wed, 06 Apr 2022 14:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/apache_airflow_using_wsl2/</guid>
      <description>개요 Windows WSL2에서 airflow를 설치한다. Step 1. Install pip on WSL airflow를 설치하기 위해 pip를 설치한다. $ sudo apt install python3-pip [sudo] password for username: Step 2. Install virtualenv package virtualenv 라이브러리를 설치한다. $ sudo pip3 install virtualenv Step 3. Create a virtual environment C드라이브에 airflow-test 폴더를 생성한다. 해당 디렉터리로 이동한다. 이제 가상환경을 생성한다. $ virtualenv venv 가상환경에 접속을 한다. $ source venv/bin/activate 이번에는 .bashrc 파일을 수정한다. $ vi ~/.bashrc 파일을 연 후, 다음과 같은 코드를 추가한다.</description>
    </item>
    
    <item>
      <title>Windows 10 도커 설치 과정 (2022 ver)</title>
      <link>https://dschloe.github.io/settings/windows_docker_install/</link>
      <pubDate>Tue, 05 Apr 2022 14:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/windows_docker_install/</guid>
      <description>개요 주요 참고자료는 다음과 같다. WSL2 설치 : https://www.lainyzine.com/ko/article/how-to-install-wsl2-and-use-linux-on-windows-10/#google_vignette 도커 설치 : https://www.lainyzine.com/ko/article/a-complete-guide-to-how-to-install-docker-desktop-on-windows-10/ Step 1. WSL2 설치 과정 Windows PowerShell 관리자로 실행 후 다음 명령어 입력 $ dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart $ dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 위 명령어 실행 후, 재부팅 필수 x64 머신용 최신 WSL2 Linux 커널 업데이트 패키지를 다운로드 받아 안내에 따라 설치합니다. Windows Powershell 열고 아래 코드 실행 $ wsl --set-default-version 2 WSL 2와의 주요 차이점에 대한 자세한 내용은 https://aka.</description>
    </item>
    
  </channel>
</rss>
