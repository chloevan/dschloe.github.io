<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>프로세스 마이닝 on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EB%A7%88%EC%9D%B4%EB%8B%9D/</link>
    <description>Recent content in 프로세스 마이닝 on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Apr 2020 10:20:39 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EB%A7%88%EC%9D%B4%EB%8B%9D/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vcrts01 - Combining Vectors</title>
      <link>https://dschloe.github.io/r/datatransform/vcrts01/</link>
      <pubDate>Tue, 28 Apr 2020 10:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datatransform/vcrts01/</guid>
      <description>I. 개요 vctrs 패키지. Vector Helpers 패키지1라고 불리운다. 벡터를 활용할 때, 어려운 부분은 데이터와 조합해서 사용할 때다. 특히 서로다른 성질의 Vectors를 Combining 할 때 발생하는 에러에 대해 효과적으로 해결할 수 있는 대안을 제시한다.
II. Vectors 벡터에 관한 기초 부분은 여기에서 생략하고, 필자가 작성한 기초 부분에서 참조하기를 바란다.
Basci Objects (1) 벡터의 정의 R의 기본문법에서 벡터의 정의는 다음과 같다.
c(1, 2, 3) ## [1] 1 2 3 c(&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;) ## [1] &amp;#34;a&amp;#34; &amp;#34;b&amp;#34; &amp;#34;c&amp;#34; (2) tidyverse 벡터와 관련되어서 일반적으로 다음과 같은 함수에서 넓게 활용된다.</description>
    </item>
    
    <item>
      <title>Ch03 Components of Process Data</title>
      <link>https://dschloe.github.io/r/dataanalysis/process_analysis/ch03_components_of_process_data/</link>
      <pubDate>Mon, 27 Apr 2020 23:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/dataanalysis/process_analysis/ch03_components_of_process_data/</guid>
      <description>I. 개요 지난시간에 patients에 관한 데이터를 통해서 프로세스 분석에 대한 일반적인 개념을 접했다.
이번 포스트에서는 bupaR에 대한 이론적인 내용과 함께 간단하게 실습을 진행하도록 한다.
지난시간과 마찬가지로 먼저 데이터를 획득하는 것에서부터 출발한다.
library(bupaR) library(eventdataR) patients &amp;lt;- patients dim(patients) ## [1] 5442 7 5442행과 7개의 열이 확인되었다.
class(patients) ## [1] &amp;#34;eventlog&amp;#34; &amp;#34;tbl_df&amp;#34; &amp;#34;tbl&amp;#34; &amp;#34;data.frame&amp;#34; II. 용어 정리 우선 용어 정리가 필요하다. Events, Event log, Activity 등등. 하나씩 살펴보자.
(1) Events 우선 Events에 관한 이해를 돕기 위해 아래 그림을 우선 살펴보자.</description>
    </item>
    
    <item>
      <title>Ch02 Process Analysis Basic</title>
      <link>https://dschloe.github.io/r/dataanalysis/process_analysis/ch02_process_analysis_basic/</link>
      <pubDate>Thu, 23 Apr 2020 23:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/dataanalysis/process_analysis/ch02_process_analysis_basic/</guid>
      <description>I. 개요 지난시간에 patients에 관한 데이터를 통해서 프로세스 분석에 대한 일반적인 개념을 접했다.
이번 포스트에서는 bupaR에 대한 이론적인 내용과 함께 간단하게 실습을 진행하도록 한다.
지난시간과 마찬가지로 먼저 데이터를 획득하는 것에서부터 출발한다.
library(bupaR) library(eventdataR) patients &amp;lt;- patients dim(patients) ## [1] 5442 7 5442행과 7개의 열이 확인되었다.
class(patients) ## [1] &amp;#34;eventlog&amp;#34; &amp;#34;tbl_df&amp;#34; &amp;#34;tbl&amp;#34; &amp;#34;data.frame&amp;#34; 그리고, 데이터는 eventlog, tbl_df, data.frame으로 구성된 것을 확인할 수 있다. 기존에 R을 학습한 사람들은 tbl &amp;amp; data.frame에 대해서 한두번쯤 들었을 거라 생각한다.</description>
    </item>
    
    <item>
      <title>Ch01 Process Analysis Intro</title>
      <link>https://dschloe.github.io/r/dataanalysis/process_analysis/ch01_process_analysis_intro/</link>
      <pubDate>Mon, 20 Apr 2020 21:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/dataanalysis/process_analysis/ch01_process_analysis_intro/</guid>
      <description>I. Process Mining Intro 모든 비즈니스는 프로세스와 연관이 깊다. 이러한 데이터를 통상적으로 event라고 부르며, 다루는 데이터는 log 데이터와 연관이 깊다. 프로세스 마이닝(Process Mining)은 데이터의 추출, 프로세싱, 그리고 분석의 순으로 진행한다.
데이터 추출 (Extraction): Raw Data를 Event Data로 변환시킨다. 프로세싱 (Processing): 데이터 가공과 비슷하며, 보통 Aggregation, Filtering, Enrichment의 용어가 등장한다. 분석 (Analysis): Performance, Control-Flow 등과 연관된 분석이 진행된다. 우선 빠르게 시각화부터 진행해보자.
library(bupaR) library(httr) library(processmapR) library(edeaR) url &amp;lt;- &amp;#39;https://github.com/chloevan/datasets/blob/master/log/log_eat_patterns.RDS?raw=true&amp;#39; patterns &amp;lt;- readRDS(url(url)) trace_explorer(patients, coverage=1) 위 그래프에 대한 해석은 나중에 하더라도, 위 데이터를 보면, Rgst아 TraA는 공통으로 존재하고, 경로에 따라서 X-Ray, Blood Test에 나뉘는 걸 봐서는 환자의 경로에 관한 데이터임을 알 수 있다.</description>
    </item>
    
  </channel>
</rss>
