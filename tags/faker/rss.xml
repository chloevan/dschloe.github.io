<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>faker on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/faker/</link>
    <description>Recent content in faker on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Sep 2021 18:10:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/faker/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>파이썬을 활용한 JSON 파일 입출력 예제 with faker</title>
      <link>https://dschloe.github.io/python/data_engineering/ch03_reading_writing_file/json_input_output/</link>
      <pubDate>Wed, 08 Sep 2021 18:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/data_engineering/ch03_reading_writing_file/json_input_output/</guid>
      <description>개요  JSON은 (JavaScript Object Notataion)의 약자이며, 주로 API 호출 시에 사용한다. JSON 데이터를 개별적인 파일 형태로 저장하기도 한다. json 라이브러리를 활용하여 입출력을 진행하고, pandas 라이브러리를 통해서도 직접 불러오도록 한다.  JSON 파일 쓰기 전체 코드  파일은 wirtejson.py 형태로 저장한다.  from faker import Faker import json output=open(&amp;#39;data.json&amp;#39;,&amp;#39;w&amp;#39;) fake=Faker() all_df={} all_df[&amp;#39;records&amp;#39;]=[] for x in range(1000): data={&amp;#34;name&amp;#34;:fake.name(), &amp;#34;age&amp;#34;:fake.random_int(min=18, max=80, step=1), &amp;#34;street&amp;#34;:fake.street_address(), &amp;#34;city&amp;#34;:fake.city(), &amp;#34;state&amp;#34;:fake.state(), &amp;#34;zip&amp;#34;:fake.zipcode(), &amp;#34;lng&amp;#34;:float(fake.longitude()), &amp;#34;lat&amp;#34;:float(fake.latitude())} all_df[&amp;#39;records&amp;#39;].append(data)	json.dump(all_df,output)  faker 라이브러리 설명은 파이썬을 활용한 파일 입출력 예제 with faker 에서 확인한다.</description>
    </item>
    
    <item>
      <title>파이썬을 활용한 CSV 파일 입출력 예제 with faker</title>
      <link>https://dschloe.github.io/python/data_engineering/ch03_reading_writing_file/csv_input_ouput/</link>
      <pubDate>Wed, 08 Sep 2021 16:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/data_engineering/ch03_reading_writing_file/csv_input_ouput/</guid>
      <description>사전 작업  우선 임시 데이터를 기록할 라이브러리인 faker 를 설치한다. 흔히 쓰이는 필드들을 함수 하나로 쉽게 만들 수 있도록 지원한다.  (venv) $ pip3 install faker 데이터 생성하기 전체 코드  필자는 [writecsv.py](http://writecsv.py) 형태로 저장하였다. 먼저 한줄 씩 설명하면 다음과 같다.  from faker import Faker import csv output=open(&amp;#39;mydata.csv&amp;#39;, mode = &amp;#39;w&amp;#39;) fake=Faker() header=[&amp;#39;name&amp;#39;,&amp;#39;age&amp;#39;,&amp;#39;street&amp;#39;,&amp;#39;city&amp;#39;,&amp;#39;state&amp;#39;,&amp;#39;zip&amp;#39;,&amp;#39;lng&amp;#39;,&amp;#39;lat&amp;#39;] mywriter=csv.writer(output) mywriter.writerow(header) for r in range(1000): mywriter.writerow([fake.name(),fake.random_int(min=18, max=80, step=1), fake.street_address(), fake.city(),fake.state(),fake.zipcode(),fake.longitude(),fake.latitude()]) output.close()  from faker import Faker 는 라이브러리를 불러오는 것이다.</description>
    </item>
    
  </channel>
</rss>
