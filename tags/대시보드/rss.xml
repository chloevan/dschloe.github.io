<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>대시보드 on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/</link>
    <description>Recent content in 대시보드 on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Feb 2022 10:10:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Heroku App 배포</title>
      <link>https://dschloe.github.io/python/dash/heroku_app_deploy/</link>
      <pubDate>Wed, 23 Feb 2022 10:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/dash/heroku_app_deploy/</guid>
      <description>개요  Heroku App을 배포하는 과정을 작성한다. 가장 중요한 것은 Git과 연동이 되어 있어야 한다.  깃허브 : https://github.com/ GIT : https://git-scm.com/ 이 부분에 대한 설치 과정은 생략한다.   배포하려는 프로젝트는 다음 링크에서 확인한다.  참고 : Python Sales Dashboard Using Dash and Plotly       (adsbygoogle = window.adsbygoogle || []).push({});   Procfile 생성  프로젝트 Root 디렉터리에 Procfile 을 생성한다.  web: gunicorn index:server  이 때, index 파일명을 의미한다.</description>
    </item>
    
    <item>
      <title>Python Sales Dashboard Using Dash and Plotly</title>
      <link>https://dschloe.github.io/python/dash/dash_sales_dashboard/</link>
      <pubDate>Sun, 13 Feb 2022 18:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/dash/dash_sales_dashboard/</guid>
      <description>개요  Sales 데이터를 활용하여 대시보드를 만드는 과정을 제작한다. 기본 파이썬 코딩은 할 줄 안다는 전제하에 작성하며, 세부 내용이 필요하면 참고 자료를 확인할 것을 권한다. 윈도우 10에서 본 프로젝트를 수행하였다.  Chapter 1. Github Repo 생성  필자는 Github 레포를 만들었다. (Repo 명: python_dash_sales) git clone을 통해서 로컬로 가져온다.  $ git clone https://github.com/your_id/python_dash_sales.git    (adsbygoogle = window.adsbygoogle || []).push({});   Chapter 2. Python 프로젝트 생성   PyCharm을 주 에디터로 사용할 예정이다.</description>
    </item>
    
    <item>
      <title>Heroku Dash App 배포 - Windows 10</title>
      <link>https://dschloe.github.io/python/dash/heroku_windows/</link>
      <pubDate>Wed, 01 Dec 2021 09:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/dash/heroku_windows/</guid>
      <description>개요  Windows와 Virtualenv를 활용하여 빠르게 App 배포를 해본다.     (adsbygoogle = window.adsbygoogle || []).push({});   1. 프로그램 다운로드  설치파일 주소: https://devcenter.heroku.com/articles/getting-started-with-python#set-up 설치할 때, 다음과 같은 에러가 발생할 수 있다.   이럴 경우에는 환경변수를 강제로 잡는다.  C:\Program Files\heroku\bin  Heroku가 제대로 환경설정이 되어 있는지 확인하려면, 터미널에서 다음 명령어를 입력해 확인한다.  $ heroku -v heroku/7.53.0 win32-x64 node-v12.21.0 (base)  Github 설치: https://git-scm.com/ 아나콘다 설치: https://www.</description>
    </item>
    
    <item>
      <title>기업 요청 샘플 (수강생) - Python Dash를 활용한 대시보드</title>
      <link>https://dschloe.github.io/python/dash/dash_cpu_logdata/</link>
      <pubDate>Thu, 26 Aug 2021 14:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/dash/dash_cpu_logdata/</guid>
      <description>강의 홍보  취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다.  스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다.   [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기   개요  보안 로그 파일을 업로드한 뒤, 점검 결과를 자동으로 출력해주도록 한다. (수강생의 도전) 보안 로그 파일을 업로드 한 뒤, CPU 사용률이 70%가 넘으면 경고 메시지를 뛰우도록 한다.     (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>네이버 뉴스 댓글 크롤링 대시보드 만들기 with Heroku</title>
      <link>https://dschloe.github.io/python/dash/dash-crawling-tutorial/</link>
      <pubDate>Tue, 17 Aug 2021 11:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/dash/dash-crawling-tutorial/</guid>
      <description>강의 홍보  취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다.  스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다.   [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기   1. 개요  기존 웹크롤링은 주로 코드에 기반한 소개가 주를 이루었음 본 장에서는 가급적 사용자 기준에 맞춰서 뉴스 URL만 입력하면 댓글 수집할 수 있는 기능 소개함     (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Python Dash를 활용한 대시보드에서 엑셀 데이터로 다운로드 받기</title>
      <link>https://dschloe.github.io/python/dash/dash_security_log/</link>
      <pubDate>Thu, 12 Aug 2021 09:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/dash/dash_security_log/</guid>
      <description>강의 홍보  취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다.  스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다.   [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기   [대시보드] Dash Project - Excel 다운로드 개요  각 레벨에 따라 달라지는 데이터를 시각화로 표현하고 결과치를 엑셀로 다운로드 받는 기능을 구현한다.     (adsbygoogle = window.adsbygoogle || []).</description>
    </item>
    
    <item>
      <title>Python Dash를 활용한 대시보드 만들기 with Heroku</title>
      <link>https://dschloe.github.io/python/dash/dash_project/</link>
      <pubDate>Wed, 04 Aug 2021 18:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/dash/dash_project/</guid>
      <description>강의 홍보  취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다.  스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다.   [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기      (adsbygoogle = window.adsbygoogle || []).push({});   개요  대시보드 프로젝트를 진행한다. Heroku에 배포까지 진행하는 것을 목적으로 한다. 참조: https://realpython.com/python-dash/  여기에 있는 내용을 최대한 간결하게 한글로 재 작성하였다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 08 - HTML, CSS 적용</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_08/</link>
      <pubDate>Sun, 05 Apr 2020 11:30:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_08/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 07 - flexdashboard package</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_07/</link>
      <pubDate>Thu, 02 Apr 2020 21:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_07/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 06 - shinydashboard package</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_06/</link>
      <pubDate>Wed, 01 Apr 2020 17:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_06/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 05 - Sharing Apps</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_05/</link>
      <pubDate>Tue, 31 Mar 2020 01:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_05/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts  II. Shiny Deployment의 개요 이 영역은 웹개발자에게는 매우 쉬운 영역일 수도 있다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 04 - Layouts</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_04/</link>
      <pubDate>Sun, 29 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_04/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content  II. Layouts의 개요 이번 시간에는 Shiny Layouts 개요에 대한 간략적인 소개를 하려고 한다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 03 - HTML content</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_03/</link>
      <pubDate>Fri, 27 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_03/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure  II. HTML Content 개요 이번 시간에는 HTML Content 개요에 대한 간략적인 소개를 하려고 한다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 02 - Shiny Structure</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_02/</link>
      <pubDate>Sun, 22 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_02/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny 소개 지난시간에 Shiny에 관한 대략적인 소개를 했다. 처음 이 페이지를 방문한 사람들 위해 shiny tutorial 01 - get started 에서 짧게 확인하기를 바란다.
II. Shiny App Structure 아래 샘플 코드를 확인하자.
# load the shiny package library(shiny) # 화면 구성 (UI) - 프론트엔드 ui &amp;lt;- fluidPage( numericInput(inputId = &amp;#34;n&amp;#34;, label = &amp;#34;Sample size&amp;#34;, value = 25), plotOutput(outputId = &amp;#34;hist&amp;#34;) ) # 서버 구성 - 벡엔드 server &amp;lt;- function(input, output) { output$hist &amp;lt;- renderPlot({ hist(rnorm(input$n)) # 결과물을 만들어내는 코드 작성 }) } # shiny app 호출 # 프로젝트 진행 시, 폴더 안에 # 파일명은 app.</description>
    </item>
    
    <item>
      <title>shiny tutorial 01 - get started</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_01/</link>
      <pubDate>Sat, 21 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_01/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny 소개 Shiny는 R에서 제공하는 일종의 Web Framework이다. 기존 웹사이트와 다르게, 주요 목적은 데이터를 활용해서 대시보드를 만드는 것에 초점이 맞춰져 있다.
가장 큰 장점은 무료로 빠른 프로토타입을 만들 수 있고, HTML, CSS, Javascript와 직접적으로 호환이 되기 때문에 무한한 확장성이 있다. 바로 중급 레벨에서 배우고 싶으시다면 Intermediate Level을 클릭한다.</description>
    </item>
    
    <item>
      <title>R Markdown Introduction</title>
      <link>https://dschloe.github.io/r/rmarkdown/rmarkdownintro/</link>
      <pubDate>Wed, 18 Mar 2020 13:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/rmarkdown/rmarkdownintro/</guid>
      <description>R Markdown 소개 및 환경설정 데이터 분석가의 주요 업무 중의 하나는 향후에 참고자료로 활용하기 위해 작업결과를 문서화 해야 하는데, 상당량의 보고서를 작성해서 분석과정과 출력결과를 기술해야만 합니다.
보통의 과정은 아래과 같을 것입니다.
 1단계: 본인의 작업을 위해서 R 스크립트 작성 2단계: 다양한 그래프가 첨부된 분석결과를 Word, PPT 분석결과를 기술해서 동료 또는 메신저로 분석결과 전송 3단계: 분석결과 토의 4단계: 각각의 그래프 결과 코드를 매칭하기 위한 작업이 토의 중 발생 5단계: 혼란 및 불필요한 시간 소요 발생  그런데, 해당 작업물을 그 때 마다 웹페이지(HTML)을 생성하여 자체 서버내 구축할 수 있다면, 그러면 위 5단계의 과정을 3단계(소스코드 작성 -&amp;gt; 웹 게시 -&amp;gt; 분석결과 토의)로 축소할 수가 있을 것이며 특히, 연구자가 분석 당시의 고민과 문제점들을 스크롤링과 함께 같이 고민할 수 있는 시간으로 빠져들 수 있도록 유도할 수 있습니다.</description>
    </item>
    
  </channel>
</rss>
