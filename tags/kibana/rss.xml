<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kibana on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/kibana/</link>
    <description>Recent content in Kibana on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Sep 2021 20:10:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/kibana/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Airflow를 활용한 PostgreSQL에서 Elasticsearch로 데이터 마이그레이션 예제</title>
      <link>https://dschloe.github.io/python/data_engineering/ch04_working_databases/airflow_postgresql_elasticsearch/</link>
      <pubDate>Sat, 18 Sep 2021 20:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/data_engineering/ch04_working_databases/airflow_postgresql_elasticsearch/</guid>
      <description>개요  Airflow를 활용하여 PostgreSQL에 저장된 데이터를 디스크로 다운로드 받고, 그리고 그 파일을 다시 읽어서 Elasticsearch에 저장하도록 한다. 전체적인 흐름은 getData from PostgreSQL &amp;gt;&amp;gt; insertData to Elasticsearch 로 저장할 수 있다.  전체 코드 실행  우선 전체 코드를 실행하도록 한다.  import datetime as dt from datetime import timedelta from airflow import DAG from airflow.operators.bash import BashOperator from airflow.operators.python import PythonOperator import pandas as pd import psycopg2 as db from elasticsearch import Elasticsearch def queryPostgresql(): conn_string=&amp;#34;dbname=&amp;#39;python_dataengineering&amp;#39; host=&amp;#39;localhost&amp;#39; user=&amp;#39;postgres&amp;#39; password=&amp;#39;evan&amp;#39;&amp;#34; conn = db.</description>
    </item>
    
    <item>
      <title>파이썬을 활용한 엘라스틱서치에서 데이터 추출</title>
      <link>https://dschloe.github.io/python/data_engineering/ch04_working_databases/elasticsearch_python_extract/</link>
      <pubDate>Fri, 17 Sep 2021 20:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/data_engineering/ch04_working_databases/elasticsearch_python_extract/</guid>
      <description>데이터를 질의하는 방법과 데이터를 삽입하는 방법은 동일하다. 다만, 이 때에는 search 메서드를 사용하다. 또한, doc 문서도 조금 다르다. 기본적으로 SQL 과 문법이 다르기 때문에 공식문서를 확인한다.  실행  본 테스트를 실행하기에 앞서서, Elasticsearch 과 Kibana 를 먼저 구동시키고, 데이터가 미리 삽입 되어 있으면 좋다.  Elastic Search Engine Installation Kibana Installation 파이썬과 엘라스틱서치 DB 연동    실습 1 - 전체 데이터 확인  먼저 아래코드를 복사한 뒤 붙여넣기 하여 실행시켜보도록 한다.</description>
    </item>
    
    <item>
      <title>파이썬과 엘라스틱서치 DB 연동</title>
      <link>https://dschloe.github.io/python/data_engineering/ch04_working_databases/elasticsearch_with_python_dbinsert/</link>
      <pubDate>Wed, 15 Sep 2021 11:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/data_engineering/ch04_working_databases/elasticsearch_with_python_dbinsert/</guid>
      <description>강의 홍보  취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다.  스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다.   [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기   개요  NoSQL 데이터베이스 시스템의 하나인 Elasticsearch 를 다루는 방법을 설명한다. NoSQL 은 데이터를 행들과 열들로 저장하지 않는 데이터베이스를 말한다. 대개 JSON문서 형태로 저장하고, SQL이 아닌 절의 언어를 주로 사용한다.</description>
    </item>
    
    <item>
      <title>Kibana Installation</title>
      <link>https://dschloe.github.io/python/data_engineering/ch02_infra/kibana_install/</link>
      <pubDate>Tue, 07 Sep 2021 13:13:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/data_engineering/ch02_infra/kibana_install/</guid>
      <description>강의 홍보  취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다.  스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다.   [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기   개요  Elastic Search는 GUI를 제공하지 않고 API만 제공한다. 따라서, 시각화 도구인 키바나를 GUI로 사용하도록 하는 것이 특징이다.  Elastic Search 설치는 Elastic Search Engine Installation에서 확인한다.   즉, 다시 말하면 Elastic Search 는 API 데이터만 제공할 뿐이고, 이를 가시적으로 보여주기 위해서는 Kibana를 설치해야 한다는 뜻이다.</description>
    </item>
    
  </channel>
</rss>
