<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recommendation on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/recommendation/</link>
    <description>Recent content in Recommendation on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Jun 2020 22:10:30 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/recommendation/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>추천 시스템 개요 및 이론, Surprise Package</title>
      <link>https://dschloe.github.io/python/recommendation/recommendation_02/</link>
      <pubDate>Mon, 22 Jun 2020 22:10:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/recommendation/recommendation_02/</guid>
      <description>I. 개요 대고객 대상으로 한 대부분의 플랫폼 서비스 업체들은 고객 개개인에게 맞춤형의 추천 서비스를 도입하고 있음 전자상거래 업체, 유투브, 애플 뮤직 등 ML의 여러 알고리즘 중 비즈니스 관점에 부합하는 기법이 추천 시스템. 추천 시스템의 진정한 묘미는 사용자 본인도 모르는 취향 발견, 재구매로 연결하도록 설계 누가 필요할까? 모든 플랫폼 서비스 이유1: 플랫폼은 다수의 판매자와 소비자를 필요로 함, 문제는 카테고리와 메뉴구성이 복잡해지면 소비자의 제품 선택에 부작용 이유2: 만족도가 떨어지면 고객은 그 플랫폼을 떠날 가능성이 크며, 이는 플랫폼 서비스의 매출 하락과 직결 모든 플랫폼 서비스는 기본적으로 추천서비스를 장착하고 싶어함 영화 데이터를 기준으로 추천시스템을 단계별로 구현함을 목표로 함 II.</description>
    </item>
    
    <item>
      <title>추천 시스템 패키지 소개 - recommenderlab</title>
      <link>https://dschloe.github.io/r/recommendation/recommendation_intro/</link>
      <pubDate>Mon, 22 Jun 2020 10:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/recommendation/recommendation_intro/</guid>
      <description>I. 개요 추천시스템을 처음 배우는 접하는 사람들을 위해 준비한 입문 Tutorial이다.
패키지 소개서에 있는 내용을 한글로 번역하였다.
This R package provides an infrastructure to test and develop recommender algorithms. The package supports rating (e.g., 1-5 stars) and unary (0-1) data sets. Supported algorithms are:
이 R 패키지는 추천자 알고리즘을 테스트하고 개발할 수 있는 인프라를 제공한다. 이 패키지는 등급(예: 별 1-5개) 및 단항(0-1) 데이터 세트를 지원한다. 지원되는 알고리즘:
User-based collborative filtering (UBCF) Item-based collborative filtering (IBCF) SVD with column-mean imputation (SVD) Funk SVD (SVDF) Alternating Least Squares (ALS) Matrix factorization with LIBMF (LIBMF) Association rule-based recommender (AR) Popular items (POPULAR) Randomly chosen items for comparison (RANDOM) Re-recommend liked items (RERECOMMEND) Hybrid recommendations (HybridRecommender) For evaluation, the framework supports given-n and all-but-x protocols with</description>
    </item>
    
    <item>
      <title>추천 시스템 개요 및 이론, Baseline Code</title>
      <link>https://dschloe.github.io/python/recommendation/recommendation_01/</link>
      <pubDate>Sun, 21 Jun 2020 17:10:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/recommendation/recommendation_01/</guid>
      <description>I. 개요 대고객 대상으로 한 대부분의 플랫폼 서비스 업체들은 고객 개개인에게 맞춤형의 추천 서비스를 도입하고 있음 전자상거래 업체, 유투브, 애플 뮤직 등 ML의 여러 알고리즘 중 비즈니스 관점에 부합하는 기법이 추천 시스템. 추천 시스템의 진정한 묘미는 사용자 본인도 모르는 취향 발견, 재구매로 연결하도록 설계 누가 필요할까? 모든 플랫폼 서비스 이유1: 플랫폼은 다수의 판매자와 소비자를 필요로 함, 문제는 카테고리와 메뉴구성이 복잡해지면 소비자의 제품 선택에 부작용 이유2: 만족도가 떨어지면 고객은 그 플랫폼을 떠날 가능성이 크며, 이는 플랫폼 서비스의 매출 하락과 직결 모든 플랫폼 서비스는 기본적으로 추천서비스를 장착하고 싶어함 영화 데이터를 기준으로 추천시스템을 단계별로 구현함을 목표로 함 II.</description>
    </item>
    
  </channel>
</rss>
