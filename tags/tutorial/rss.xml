<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/tutorial/</link>
    <description>Recent content in Tutorial on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Mar 2022 17:38:15 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/tutorial/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>R 텍스트 마이닝 1일차 - 빅카인즈 데이터 수집</title>
      <link>https://dschloe.github.io/r/text_mining/r_text_mining_1_data_crawling/</link>
      <pubDate>Sun, 13 Mar 2022 17:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/text_mining/r_text_mining_1_data_crawling/</guid>
      <description>Step 01 - 빅카인즈 접속 후, 데이터 내려받기 싸이트 : https://www.bigkinds.or.kr/v2/news/index.do 해당 싸이트에서 키워드를 입력 한다. 이 때, 기간, 신문사 등을 선택할 수 있다. 필자는 키워드는 ‘사회적 경제’ 신문사는 국민일보, 조선일보, 중앙일보를 선택한다. 하단으로 내려 적용하기 버튼을 클릭한다. Step 03 - 분석 결과 및 시각화 탭을 클릭한다. 데이터 다운로드 탭 하단에 엑셀 다운로드 버튼을 클릭한다. 해당 파일에는 본문이 있지만, 보통 200자 내외로 짧게 요약이 되어 있다. Step 02 - 웹 크롤링 소스 코드 작성을 위한 사전 준비 먼저 기 다운로드 된 파일을 불러온다.</description>
    </item>
    
    <item>
      <title>Basic Objects - Dataframe</title>
      <link>https://dschloe.github.io/r/basics/dataframe/</link>
      <pubDate>Wed, 06 May 2020 11:10:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/dataframe/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. DataFrame의 개요 본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
데이터프레임은 서로 다른 성질의 벡터가 모여 있는 집합이라고 할 수 있다.1
(1) 데이터프레임 생성 이제 데이터프레임을 만들어보자. 어려운 것은 아니니 쉽게 따라 올 수 있을 것이다.</description>
    </item>
    
    <item>
      <title>list handling</title>
      <link>https://dschloe.github.io/r/basics/list/</link>
      <pubDate>Wed, 29 Apr 2020 11:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/list/</guid>
      <description>I. 개요 모든 프로그래밍 언어에는 기본적으로 데이터타입이 존재한다. R도 프로그래밍 언어이기 때문에 데이터 타입의 일반적인 유형이 존재한다.
Vector의 기본 개념을 익혔다면, 전반적인 구조에 대해 살피는 시간을 갖도록 한다. 먼저 동일 성질의 Vector가 모여서 matrix도 되고, 데이터프레임도 된다. 그리고 이러한 다양한 데이터의 구조가 모여 리스트를 형성하는데,
리스트를 만드는 것도 중요한 건, 즉 이해다. 리스트에 접근법이 중요한데, 리스트를 잘 다루면, apply 함수 계열을 사용하는데도 큰 도움이 된다.
특히, 100GB 이상의 데이터를 다루게 되면, apply() 함수로 작업해야 하는 일이 종종 발생한다.</description>
    </item>
    
    <item>
      <title>More on Vectors and Indexing</title>
      <link>https://dschloe.github.io/r/basics/more_vectors_indexing/</link>
      <pubDate>Sun, 26 Apr 2020 16:10:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/more_vectors_indexing/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. 벡터 본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
현재 진행중인 R 기초문법은 아래와 같습니다. 원하시는 것은 참조해서 가볍게 공부하시기를 바랍니다.
Basic Objects - Vector 벡터(Vector). R에서 다루는 가장 작은 단위값의 데이터다. 1차원으로 구성이 되어 있다.</description>
    </item>
    
    <item>
      <title>Basic Objects - Vector</title>
      <link>https://dschloe.github.io/r/basics/basic_objects_vector/</link>
      <pubDate>Sat, 25 Apr 2020 18:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/basic_objects_vector/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. 벡터 본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
벡터(Vector). R에서 다루는 가장 작은 단위값의 데이터다. 1차원으로 구성이 되어 있다.
(1) 4가지 벡터 크게 4가지의 벡터가 존재한다. 간단하게 코드를 작성해보자.
xNum &amp;lt;- c(1, 3.</description>
    </item>
    
    <item>
      <title>Round 함수 - digits</title>
      <link>https://dschloe.github.io/r/basics/round/</link>
      <pubDate>Fri, 17 Apr 2020 10:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/round/</guid>
      <description>Round 함수 소개 round 함수는 대개 소수점 자리에서 반올림 할 때 자주 쓰는다.
test &amp;lt;- c(1.24, 2.40, 3.56, 4.56) round(test, digits = 1) ## [1] 1.2 2.4 3.6 4.6 digits = 1의 의미는 소수점 첫번째 자리에서 반올림 하라는 뜻이다.
그런데 digits = -1을 하게 되면 어떻게 될까?
정수 반올림 빠르게 실습을 해보자.
test2 &amp;lt;- c(-14, -26, 14, 26, 39, 124, 247) round(test2, digits = -1) ## [1] -10 -30 10 30 40 120 250 digits = -1을 하게되면 정수의 첫번째 자리에서 반올림한다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 08 - HTML, CSS 적용</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_08/</link>
      <pubDate>Sun, 05 Apr 2020 11:30:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_08/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 07 - flexdashboard package</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_07/</link>
      <pubDate>Thu, 02 Apr 2020 21:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_07/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 06 - shinydashboard package</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_06/</link>
      <pubDate>Wed, 01 Apr 2020 17:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_06/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 05 - Sharing Apps</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_05/</link>
      <pubDate>Tue, 31 Mar 2020 01:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_05/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts II. Shiny Deployment의 개요 이 영역은 웹개발자에게는 매우 쉬운 영역일 수도 있다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 04 - Layouts</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_04/</link>
      <pubDate>Sun, 29 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_04/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content II. Layouts의 개요 이번 시간에는 Shiny Layouts 개요에 대한 간략적인 소개를 하려고 한다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 03 - HTML content</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_03/</link>
      <pubDate>Fri, 27 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_03/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure II. HTML Content 개요 이번 시간에는 HTML Content 개요에 대한 간략적인 소개를 하려고 한다. 영어가 편하거나 중고급 개발자 분들은 Customize your UI with HTML를 참고하기를 바란다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 02 - Shiny Structure</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_02/</link>
      <pubDate>Sun, 22 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_02/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny 소개 지난시간에 Shiny에 관한 대략적인 소개를 했다. 처음 이 페이지를 방문한 사람들 위해 shiny tutorial 01 - get started 에서 짧게 확인하기를 바란다.
II. Shiny App Structure 아래 샘플 코드를 확인하자.
# load the shiny package library(shiny) # 화면 구성 (UI) - 프론트엔드 ui &amp;lt;- fluidPage( numericInput(inputId = &amp;#34;n&amp;#34;, label = &amp;#34;Sample size&amp;#34;, value = 25), plotOutput(outputId = &amp;#34;hist&amp;#34;) ) # 서버 구성 - 벡엔드 server &amp;lt;- function(input, output) { output$hist &amp;lt;- renderPlot({ hist(rnorm(input$n)) # 결과물을 만들어내는 코드 작성 }) } # shiny app 호출 # 프로젝트 진행 시, 폴더 안에 # 파일명은 app.</description>
    </item>
    
    <item>
      <title>shiny tutorial 01 - get started</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_01/</link>
      <pubDate>Sat, 21 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_01/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny 소개 Shiny는 R에서 제공하는 일종의 Web Framework이다. 기존 웹사이트와 다르게, 주요 목적은 데이터를 활용해서 대시보드를 만드는 것에 초점이 맞춰져 있다.
가장 큰 장점은 무료로 빠른 프로토타입을 만들 수 있고, HTML, CSS, Javascript와 직접적으로 호환이 되기 때문에 무한한 확장성이 있다. 바로 중급 레벨에서 배우고 싶으시다면 Intermediate Level을 클릭한다.</description>
    </item>
    
    <item>
      <title>R Markdown Introduction</title>
      <link>https://dschloe.github.io/r/rmarkdown/rmarkdownintro/</link>
      <pubDate>Wed, 18 Mar 2020 13:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/rmarkdown/rmarkdownintro/</guid>
      <description>R Markdown 소개 및 환경설정 데이터 분석가의 주요 업무 중의 하나는 향후에 참고자료로 활용하기 위해 작업결과를 문서화 해야 하는데, 상당량의 보고서를 작성해서 분석과정과 출력결과를 기술해야만 합니다.
보통의 과정은 아래과 같을 것입니다.
1단계: 본인의 작업을 위해서 R 스크립트 작성 2단계: 다양한 그래프가 첨부된 분석결과를 Word, PPT 분석결과를 기술해서 동료 또는 메신저로 분석결과 전송 3단계: 분석결과 토의 4단계: 각각의 그래프 결과 코드를 매칭하기 위한 작업이 토의 중 발생 5단계: 혼란 및 불필요한 시간 소요 발생 그런데, 해당 작업물을 그 때 마다 웹페이지(HTML)을 생성하여 자체 서버내 구축할 수 있다면, 그러면 위 5단계의 과정을 3단계(소스코드 작성 -&amp;gt; 웹 게시 -&amp;gt; 분석결과 토의)로 축소할 수가 있을 것이며 특히, 연구자가 분석 당시의 고민과 문제점들을 스크롤링과 함께 같이 고민할 수 있는 시간으로 빠져들 수 있도록 유도할 수 있습니다.</description>
    </item>
    
  </channel>
</rss>
