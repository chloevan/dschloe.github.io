<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rs on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/r/</link>
    <description>Recent content in Rs on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Aug 2022 17:38:15 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/r/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mecab 사용자 단어 사전 추가 in R, windows 10</title>
      <link>https://dschloe.github.io/r/text_mining/mecab_user_dic_in_r/</link>
      <pubDate>Wed, 17 Aug 2022 17:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/text_mining/mecab_user_dic_in_r/</guid>
      <description>개요  Mecab에서 사용자 단어를 추가하고 직접 사용하는 예제를 만들어본다. 사전에 Mecab은 설치가 되어 있다고 가정한다. 만약 처음 설치한다면, 다음 참조 링크에서 설치를 진행한다.  참조 : RcppMeCab 패키지 설치 (Windows)    문제점  아래그림과 같이 ‘사회적경제’라는 단어가 잡히지 않는 것을 확인할 수 있다.  해결방법  먼저, 사전 위치를 찾는다.  mecab &amp;gt; user-dic 폴더 내에 nnp.csv 파일을 찾는다.     서식에 관한 구체적인 내용을 참조링크를 확인한다.</description>
    </item>
    
    <item>
      <title>R Selenium 설치 가이드 (Windows)</title>
      <link>https://dschloe.github.io/r/r_settings/r_selenium/</link>
      <pubDate>Wed, 13 Apr 2022 17:20:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/r_settings/r_selenium/</guid>
      <description>개요  R에서 Selenium을 설치하는 과정을 보여준다. 우선 자바가 설치되어 있는지 확인한다. 유투브에서 제목만 가져오는 Demo 코드를 작성한다.  자바를 모르시는 분  만약 자바 설치를 해본적이 없다면 아래 코드를 순차적으로 입력한다.  install.packages(&amp;#34;multilinguer&amp;#34;) library(multilinguer) install_jdk() # Rtools 설치 필요  # https://cran.r-project.org/bin/windows/Rtools write(&amp;#39;PATH=&amp;#34;${RTOOLS40_HOME}\\usr\\bin;${PATH}&amp;#34;&amp;#39;, file = &amp;#34;~/.Renviron&amp;#34;, append = TRUE) Sys.which(&amp;#34;make&amp;#34;) install.packages(c(&amp;#34;stringr&amp;#34;, &amp;#34;hash&amp;#34;, &amp;#34;tau&amp;#34;, &amp;#34;Sejong&amp;#34;, &amp;#34;RSQLite&amp;#34;, &amp;#34;devtools&amp;#34;), type = &amp;#34;binary&amp;#34;) install.packages(&amp;#34;remotes&amp;#34;) remotes::install_github(&amp;#34;haven-jeon/KoNLP&amp;#34;, upgrade = &amp;#34;never&amp;#34;, INSTALL_opts = c(&amp;#34;--no-multiarch&amp;#34;)) library(KoNLP) useNIADic()  마지막 코드에서 콘솔창이 보인다면 정상적으로 설치가 완료가 된 것이다.</description>
    </item>
    
    <item>
      <title>R 텍스트 마이닝 1일차 - 빅카인즈 데이터 수집</title>
      <link>https://dschloe.github.io/r/text_mining/r_text_mining_1_data_crawling/</link>
      <pubDate>Sun, 13 Mar 2022 17:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/text_mining/r_text_mining_1_data_crawling/</guid>
      <description>Step 01 - 빅카인즈 접속 후, 데이터 내려받기  싸이트 : https://www.bigkinds.or.kr/v2/news/index.do 해당 싸이트에서 키워드를 입력 한다.  이 때, 기간, 신문사 등을 선택할 수 있다. 필자는 키워드는 ‘사회적 경제’ 신문사는 국민일보, 조선일보, 중앙일보를 선택한다. 하단으로 내려 적용하기 버튼을 클릭한다.     Step 03 - 분석 결과 및 시각화 탭을 클릭한다.  데이터 다운로드 탭 하단에 엑셀 다운로드 버튼을 클릭한다.     해당 파일에는 본문이 있지만, 보통 200자 내외로 짧게 요약이 되어 있다.</description>
    </item>
    
    <item>
      <title>M1 Mac Tensorflow Installation in R</title>
      <link>https://dschloe.github.io/r/r_settings/m1_tensorflow/</link>
      <pubDate>Tue, 16 Nov 2021 17:20:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/r_settings/m1_tensorflow/</guid>
      <description>개요  M1 Mac에서 텐서플로를 설치 한다. 필자의 현재 M1 환경은 아래와 같다.  sessionInfo() R version 4.1.2 (2021-11-01) Platform: aarch64-apple-darwin20 (64-bit) Running under: macOS Big Sur 11.6 Matrix products: default LAPACK: /Library/Frameworks/R.framework/Versions/4.1-arm64/Resources/lib/libRlapack.dylib locale: [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 attached base packages: [1] stats graphics grDevices utils datasets methods base other attached packages: [1] ggplot2_3.3.5 dplyr_1.0.7 tfdatasets_2.7.0 keras_2.7.0 [5] reticulate_1.22 tensorflow_2.7.0 loaded via a namespace (and not attached): [1] Rcpp_1.0.7 compiler_4.1.2 pillar_1.6.4 prettyunits_1.1.1 [5] base64enc_0.</description>
    </item>
    
    <item>
      <title>RcppMeCab 패키지 설치 (Windows)</title>
      <link>https://dschloe.github.io/r/newpkgs/rcppmecab_install/</link>
      <pubDate>Sat, 23 Oct 2021 00:21:01 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/newpkgs/rcppmecab_install/</guid>
      <description>개요  Mecab-ko 형태소 분석기 사용 위해서는 Rcppmecab 패키지를 설치해야 함. RcppMeCab 패키지 설치 앞서서 설치할 파일이 있음.  URL: https://github.com/junhewk/RcppMeCab/blob/master/README_kr.md 해당 깃허브에서 설치해야 할 파일을 다운로드 받은 후, &amp;ldquo;C:\mecab&amp;rdquo; 경로에 설치한다.    설치 파일  MeCab 프로그램: mecab-ko-0.9.2-msvc-3 MeCab 사전: mecab-ko-dic-2.1.1-20180720-msvc-2  위 파일을 다운로드 받은 후, &amp;ldquo;C:\mecab&amp;quot;에서 압축을 해제한다.
RcppMecab 패키지 불러오기.  이제 패키지를 불러오도록 한다. 해당 패키지는 Github 버전으로 설치해야 하기 때문에 아래와 같이 설치를 한다.</description>
    </item>
    
    <item>
      <title>Home Credit Default - Data Visualization</title>
      <link>https://dschloe.github.io/r/kaggle/day_1_home_credit_visusalization/</link>
      <pubDate>Tue, 05 Oct 2021 09:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/kaggle/day_1_home_credit_visusalization/</guid>
      <description>공지  본 포스트는 재직자 교육을 위해 만든 강의안의 일부입니다.  Introduction 대회 개요  Many people struggle to get loans due to insufficient or non-existent credit histories. And, unfortunately, this population is often taken advantage of by untrustworthy lenders. Home Credit strives to broaden financial inclusion for the unbanked population by providing a positive and safe borrowing experience. In order to make sure this underserved population has a positive loan experience, Home Credit makes use of a variety of alternative data&amp;ndash;including telco and transactional information&amp;ndash;to predict their clients&#39; repayment abilities.</description>
    </item>
    
    <item>
      <title>tuber 패키지와 유투브 API를 활용한 Youtube 댓글 수집</title>
      <link>https://dschloe.github.io/r/youtube/youtube_api/</link>
      <pubDate>Thu, 30 Sep 2021 10:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/youtube/youtube_api/</guid>
      <description>공지  본 자료는 아래 책에서 일부 발췌 하였고, 해당 코드를 재응용하기 위해 노력하였습니다. 전체 원 소스 코드를 보시려면 책을 구매하시기를 바랍니다. 실무 예제로 끝내는 R 데이터 분석: 데이터 분석가에게 꼭 필요한 5가지 실무 예제로 분석 프로세스 이해하기  구입처: http://www.yes24.com/Product/Goods/103449758?OzSrank=1    개요  Youtube API에 등록 후, 댓글 수집 및 감성을 분석하는 과정을 담았습니다.  구글 API 프로젝트 생성하기   API 사용을 위해서는 구글 개발자 콘솔에 접속한다.</description>
    </item>
    
    <item>
      <title>Classification with Tidymodels</title>
      <link>https://dschloe.github.io/r/machine_learning/classification_tidymodels/</link>
      <pubDate>Tue, 28 Sep 2021 10:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/machine_learning/classification_tidymodels/</guid>
      <description>개요  새로운 ML 라이브러리인 tidymodels를 활용하여 분류 모델을 개발해본다.  데이터   데이터는 Loan Prediction Practice Problem에서 가져왔다.
 URL: https://datahack.analyticsvidhya.com/contest/practice-problem-loan-prediction-iii/#ProblemStatement    회원가입 후, 대회 참여를 하면 3개의 파일을 다운로드 받을 수 있다.
 Train file, Test file, Submission File    Data Dictionary   Train 파일의 데이터 명세서는 다음과 같다.   Test 파일의 데이터 명세서는 다음과 같다.   Submission 파일의 데이터 명세서는 다음과 같다.</description>
    </item>
    
    <item>
      <title>트위터 데이터 수집 with R</title>
      <link>https://dschloe.github.io/r/newpkgs/rtweet/</link>
      <pubDate>Wed, 24 Mar 2021 11:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/newpkgs/rtweet/</guid>
      <description>1줄 요약  R을 활용하여 트위터 데이터를 수집하는 방법 및 절차에 대해 배우도록 한다.  트위터 API 인증   https://apps.twitter.com에 접속한다.
 회원가입을 진행한다.    create an app 버튼을 클릭한다.   필자는 Hobbysit-Exploring the API를 선택했다.  그 후에 개인 정보 등을 입력해야 한다. 휴대폰, 이메일 인증 등    인증 메일이 오기전까지는 조금 시일이 걸린다.
  rtweet 패키지   별도의 인증 절차 없이 사용 가능한 패키지</description>
    </item>
    
    <item>
      <title>disk.frame 패키지 소개</title>
      <link>https://dschloe.github.io/r/newpkgs/disk_frame/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dschloe.github.io/r/newpkgs/disk_frame/</guid>
      <description>공지  대용량 데이터 전처리시에 필요한 패키지를 소개한다.  url: https://www.youtube.com/watch?v=EOjObl_GSi4       주석은 가급적 원어를 남겨 놓으니 잘 번역하기를 바란다.  설치  설치 방법은 기존과 마찬가지로 간단하게 작성할 수 있다.  install.packages(&amp;#34;disk.frame&amp;#34;) suppressPackageStartupMessages(library(disk.frame)) library(nycflights13) 패키지 주요 아이디어  메모리보다 많은 데이터를 각각의 chunks로 분해하여 하나의 폴더 안에 저장한다. (HDD 디스크 사용) 자세한 셜명은 Giuhub를 참고 (https://github.com/xiaodaigh/disk.frame)  Setup  실습 환경을 구성한다.  setup_disk.frame() ## The number of workers available for disk.</description>
    </item>
    
    <item>
      <title>KDX Competition Guideline</title>
      <link>https://dschloe.github.io/r/competition/blog_kdx_guideline/</link>
      <pubDate>Wed, 14 Oct 2020 09:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/competition/blog_kdx_guideline/</guid>
      <description>개요  본 수업을 듣는 수강생들을 위해 간단한 튜토리얼을 만들었다. 대회는 다음과 같다.  싸이트: 한국데이터거래소    /img/r/competition/blog_kdx_guideline_files/img 1단계 패키지 불러오기  데이터 가공 및 시각화 위주의 패키지를 불러온다.  library(tidyverse) # 데이터 가공 및 시각화 library(readxl) # 엑셀파일 불러오기 패키지  2단계 데이터 불러오기  데이터가 많아서 순차적으로 진행하도록 한다. 각 데이터에 대한 설명은활용데이터설명(PDF)을 참조한다.   먼저 제 개발환경은 아래와 같다.  Note: 윈도우와 Mac은 다를 수 있음을 명심하자.</description>
    </item>
    
    <item>
      <title>(NCS) R 기초문법</title>
      <link>https://dschloe.github.io/r/ncs/r_basic_1/</link>
      <pubDate>Fri, 18 Sep 2020 10:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/ncs/r_basic_1/</guid>
      <description>I. 개요  R을 처음 접하는 사람들을 위한 입문 포스트. 기존에 R을 하셨던 분들은 가볍게 보도록 한다. 프로그램을 설치한다.  필수 R: https://www.r-project.org/ 옵션(1) RStudio: https://rstudio.com/ 옵션(2) PyCharm: https://www.jetbrains.com/ko-kr/pycharm/download/   R은 일종의 엔진이기 때문에 필수로 설치한다.  파이썬과 같이 쓰는 유저라면 PyCharm을 R만 사용한다면 RStudio를 사용한다.    (1) 데이터 분석의 기본 흐름  데이터 수집, 저장, 가공, 시각화, 모델링, 보고서 (대시보드) 입문자, 서비스 기획자는 전체의 생태계를 보자. PDF - 강사 메뉴얼 참조  II.</description>
    </item>
    
    <item>
      <title>OCE 패키지 소개</title>
      <link>https://dschloe.github.io/r/newpkgs/oce_intro/</link>
      <pubDate>Sat, 12 Sep 2020 00:21:01 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/newpkgs/oce_intro/</guid>
      <description>개요  새로운 분야에 대한 자료 정리는 언제나 흥미롭다. 오늘은 해양과학을 분석해보는 시간을 갖는다. 사실 필자는 해양과학을 모른다.  교재  교재 Oceanographic Analysis with R는 구매할 수 있다.  패키지 설치  패키지 홈페이지를 참고한다. 패키지 저자는 CRAN에서 다운로드 받는 것 보다는 깃허브에서 받는 것을 추천한다.  패키지 업데이트가 1년에 몇번 되지 않는다고 조금은 솔직하게 말한다.    # install.packages(&amp;#34;oce&amp;#34;, dependencies = TRUE) library(oce) ## Loading required package: gsw ## Loading required package: testthat Evolution of oce  홈페이지에서 Oce는 오픈 소스 시스템으로 소개하고 있기 때문에, 관련 학문에 종사하는 사람들이 참여 해주는 것이 해당 패키지 발전에 매우 중요한 부분이다.</description>
    </item>
    
    <item>
      <title>xgboost and kaggle with R</title>
      <link>https://dschloe.github.io/r/machine_learning/3_6_xgboost/</link>
      <pubDate>Mon, 10 Aug 2020 11:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/machine_learning/3_6_xgboost/</guid>
      <description>개요  R 강의를 진행하면서 xgboost를 R로 구현하고 싶었다. kaggle에 있는 데이터를 불러와서 제출까지 가는 과정을 담았으니 입문자들에게 작은 도움이 되기를 바란다.  XGBoost 개요  논문 제목 - XGBoost: A Scalable Tree Boosting System 논문 게재일: Wed, 9 Mar 2016 01:11:51 UTC (592 KB) 논문 저자: Tianqi Chen, Carlos Guestrin 논문 소개   Tree boosting is a highly effective and widely used machine learning method. In this paper, we describe a scalable end-to-end tree boosting system called XGBoost, which is used widely by data scientists to achieve state-of-the-art results on many machine learning challenges.</description>
    </item>
    
    <item>
      <title>ch 13 - Reliability</title>
      <link>https://dschloe.github.io/r/thesis/ch_13_reliability/</link>
      <pubDate>Tue, 04 Aug 2020 21:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_13_reliability/</guid>
      <description>Intro  PLS-SEM의 분석과정에서 척도(측정변수와 잠재변수)의 신뢰도와 타당도를 확보하는 것은 매우 중요하며, 신뢰도와 타당도가 확보되지 않으면 모델 추정 결과가 의미가 없기 때문임 즉, 구조모델의 추정을 실행하려면 사전에 반드시 측정모델에 대한 평가과정을 통해 신뢰도와 타당도 확보 필요  I. 주요 개념 (1) 신뢰도  잠재변수의 측정에 있어서 얼마나 일관성이 있는가의 정도 의미  검사도구의 일관성을 말하며, 일관성이란 잠재변수를 여러 번에 걸쳐 측정했을 때 매번 같은 결과를 도출할 수 있는 정도. 내적 일관성 신뢰(Internal Consistency Reliability)로 평가    (2) 타당도  타당도의 기본 정의는 실제 측정하고자 하는 잠재변수를 정확하게 측정하고 있는 정도  PLS-SEM에서는 집중타당도(Convergent Validity)와 판별타당도(Discriminant Validity)를 사용한다.</description>
    </item>
    
    <item>
      <title>ch 12 - Demographic of Respondent in R</title>
      <link>https://dschloe.github.io/r/thesis/ch_12_demographic_of_respondents_blog/</link>
      <pubDate>Thu, 30 Jul 2020 16:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_12_demographic_of_respondents_blog/</guid>
      <description>Intro  지난 시간에 설문조사 전처리에 대해 배웠다면 이번에는 경영/사회과학 논문에서 필수적으로 기재해야 하는 표본의 특성을 간단한 프로그램으로 요약하는 것을 코딩한다.  (1) 주요 패키지  이번 포스트부터 gt 패키지를 사용하려고 한다.  gt: ggplot2와 같이 Table를 문법으로 컨트롤 할 수 있도록 구현된 패키지이다. kableExtra: HTML로 출력할 수 있도록 도와주는 패키지이다.    library(readr) library(dplyr) library(gt) library(gtsummary) I. 데이터 가져오기  우선 데이터를 불러온다.  data &amp;lt;- read_csv(&amp;#39;data/thesis_mater.csv&amp;#39;) %&amp;gt;% distinct() %&amp;gt;% # 중복데이터 제거 rename(Position = founder_employee, # 출력을 위한 변수명 정리 Age = age_of_respondent, Education = Education_Level) glimpse(data %&amp;gt;% select(Firm_Age:Business_Area))  전체 34개의 변수 중에서, 문자열 관련 데이터만 추출하였다.</description>
    </item>
    
    <item>
      <title>ch05 - Log Scale Visualisation</title>
      <link>https://dschloe.github.io/r/datavisualisation/ch05_logscale_viz/</link>
      <pubDate>Wed, 29 Jul 2020 00:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datavisualisation/ch05_logscale_viz/</guid>
      <description>공지  본 포스트는 데이터 시각화 교과서 내용의 일부를 요약하였다.   본 포스트를 읽고 가급적 전체 내용 숙지를 위해 구매하는 것을 권유한다.  개요  수치형 자료를 Y축으로 놓는 그래프는 언제나 힘들었다. log Scale을 통해 값의 크기를 줄이기는 하지만, Y축을 어떻게 표현하는 것이 좋을지에 대한 고민은 늘 있어왔다. 시각화 이론 중심의 포스팅이기에 코드 리뷰 및 해석은 생략한다.  문제점  log Scale을 적용했을 때와 그렇지 않을 때의 그래프를 비교해본다.  (1) 패키지 불러오기  각각의 패키지를 불러온다.</description>
    </item>
    
    <item>
      <title>ch 11 - Data Import &amp; Label Encoding in R</title>
      <link>https://dschloe.github.io/r/thesis/ch_11_import_data_blog/</link>
      <pubDate>Tue, 28 Jul 2020 12:30:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_11_import_data_blog/</guid>
      <description>Intro  설문조사가 끝났으면 이제 정리를 해야 한다. 일련의 과정은 보통 코딩이라 부른다.  (1) 주요 패키지  이번 포스트부터 gt 패키지를 사용하려고 한다.  gt: ggplot2와 같이 Table를 문법으로 컨트롤 할 수 있도록 구현된 패키지이다. kableExtra: HTML로 출력할 수 있도록 도와주는 패키지이다.    문제점  SmartPLS 프로그램을 쓴다 하더라도 기본적으로 모든 데이터의 entry는 수치형으로 일단 바뀌어 있어야 한다. 우선 데이터를 불러와서 확인해보자.  library(tidyverse) library(gt) library(kableExtra) # 데이터 불러오기 data &amp;lt;- read_csv(&amp;#34;data/thesis_mater.</description>
    </item>
    
    <item>
      <title>ch 10 - 연구모델 개발과 가설 설정</title>
      <link>https://dschloe.github.io/r/thesis/ch_10_conceptual_model/</link>
      <pubDate>Mon, 27 Jul 2020 09:30:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_10_conceptual_model/</guid>
      <description>I. 연구모델 개발과 가설 설정  교재에서는 스마트폰 프로젝트의 연구모델 데이터를 기반으로 작성하였지만, 이번 포스트 이후 부터는 필자의 학위논문 데이터를 기반으로 책 내용과 병행하려고 한다.  (1) 연구모델 개요  학위논문 주제: The Mediating Effect of Entrepreneurial Performance on the Relationship between Entrepre-neurial Orientation and Social Capital: The cases from the Philippines 주요요인은 기업가적지향성, 사회적자본이며, 종속변수는 기업의 성과로 구성되어 있다.  설문지 공개관련:  설문지 Sample이 필요하신 분들은 2021년 2월 이후에 요청하기를 바란다.</description>
    </item>
    
    <item>
      <title>ch 09 - PLS-SEM 통계 분석기법(2)</title>
      <link>https://dschloe.github.io/r/thesis/ch_09_2_stat_method_with_pls_sem/</link>
      <pubDate>Sun, 26 Jul 2020 20:30:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_09_2_stat_method_with_pls_sem/</guid>
      <description>I. PLS-SEM 통계 기초  교재를 참고하여 통계 기초에 대한 간단한 설명을 서술한다.  이는 다른 통계 책에도 있는 내용이기는 하다. 지난 시간에, PLS-SEM의 분포, 유의 수준과 신뢰수준의 관계, 신뢰도와 타당도, 탐색적 요인분석과 확인적 요인분석, 회귀분석에 대해 설명함  참조: PLS-SEM 통계 분석기법(1)      (1) 추정과 신뢰구간  추정(estimation)이란 모집단에 대한 어떠한 정보도 없는 상태에서 모집단을 대표할 수 있는 표본 추출하여 표본의 통계량을 구한 다음 이를 이용해서 모집단의 모수 예측  점추정(Point Estimation): 추정하고자 하는 모수를 하나의 수치로 추정 신뢰구간 추정(Confidence Interval Estimation): 추정하고자 하는 모수가 존재하리라고 예상되는 신뢰구간을 정하여 추정하는 방법  신뢰구간에서는 보통 t분포 이용.</description>
    </item>
    
    <item>
      <title>ch 09 - PLS-SEM 통계 분석기법(1)</title>
      <link>https://dschloe.github.io/r/thesis/ch_09_1_stat_method_with_pls_sem/</link>
      <pubDate>Sat, 25 Jul 2020 20:30:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_09_1_stat_method_with_pls_sem/</guid>
      <description>I. PLS-SEM 통계 기초  교재를 참고하여 통계 기초에 대한 간단한 설명을 서술한다.  이는 다른 통계 책에도 있는 내용이기는 하다.    (1) PLS-SEM의 분포  PLS-SEM은 검증 통계량으로 t분포와 t값을 활용함.  t분포는 평균이 0, 표준편차가 1인 종모양의 좌우대칭인 분포 유의수준 확인 지표는 p값을 활용함. (사회과학 분야에서는 유의수준 5% 이내)    (2) 유의수준과 신뢰수준의 관계  유의수준이 $\alpha$ 이면 신뢰수준은 $1−\alpha$ 가 됨.  즉, 신뢰수준은 허용오차수준인 유의수준에 따라 결정됨.</description>
    </item>
    
    <item>
      <title>ch 08 - SmartPLS 소프트웨어 소개</title>
      <link>https://dschloe.github.io/r/thesis/ch_08_smart_pls/</link>
      <pubDate>Thu, 02 Jul 2020 20:30:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_08_smart_pls/</guid>
      <description>I. SmartPLS 설치  SmartPLS는 구조방정식모델링을 위한 전용 통계분석 프로그램으로 다양한 학문 분야에서 광범위하게 사용됨. 편이성, 친숙성, 안정성 면에서 매우 우수함. 매우 적은 소표본에서도 활용할 수 있음. 정규분포 등의 엄격한 가정 조건에 구애받지 않고 사용할 수 있음. 프로그램 설치는 아래 링크를 클릭한다.  Download latest version - SmartPLS 3.3.2   학생용 버전은 평생 무료이며, 약간의 사용상 제약이 존재한다.  II. SmartPLS 관련 자료   교제 추천
 원서 - A Primer on Partial Least Squares Structural Equation Modeling(PLS-SEM) (2013) 번역서 - PLS 구조모델의 이해 (2014) 국내저서 - 석박사학위 및 학술논문 작성 중심의 SmartPLS 3.</description>
    </item>
    
    <item>
      <title>ch 07 - 데이터 검토</title>
      <link>https://dschloe.github.io/r/thesis/ch_07_review_data/</link>
      <pubDate>Wed, 01 Jul 2020 09:30:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_07_review_data/</guid>
      <description>개요  수집된 데이터에 대해 정규성 검증을 하는 것은 중요하다. 그런데, CB-SEM과 PLS-SEM의 기준 조건은 조금 상이하다.  정규성 분포 확인  Kolmogorov-Smirnov Test 또는 Shapiro-Wilk Test를 통해서 검증한다.  귀무가설: 데이터분포를 정규분포를 이룬다, p-value &amp;gt; 0.05   데이터가 치우쳐 있는 정도를 나타내는 왜도(skewness: S)와 첨도(Kurtosis: K)를 검토한다.  첨도와 왜도가 -1보다 작거나 또는 +1 보다 크지 않으면 변수는 정규분포를 하고 있다고 판단한다.   그러나, 이 부분은 분석 방법에 대해 조금 상이하다.</description>
    </item>
    
    <item>
      <title>ch 06 - 표본의 크기</title>
      <link>https://dschloe.github.io/r/thesis/ch_06_sample_size/</link>
      <pubDate>Tue, 30 Jun 2020 12:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_06_sample_size/</guid>
      <description>개요   PLS-SEM은 작은 표본 크기에 의해 식별 문제가 발생하지 않으며 모델이 복잡하고 표본크기가 작은 상황에서도 높은 수준의 통게적 검증력을 가짐
  일반적으로 CB-SEM의 경우 표본 크기가 200개 이상이 필요한 것으로 알려짐
  반대로 PLS-SEM은 30-100개 정도의 소표본인 경우에도 적용할 수 있다.
 표본크기를 증가시키면 모델 추정의 정확성이 높아지나 표본이 250개 이상이 넘어가면 CB-SEM과 차이점이 없어진다.    최소 표본 크기 Chin(1988)과 Barclay, Higgins &amp;amp; Thompson(1995)는 최소표본크기 결정에 있어서 10배수 규칙(10 times rule)을 제안함.</description>
    </item>
    
    <item>
      <title>ch 05 - 측정척도의 유형과 내용</title>
      <link>https://dschloe.github.io/r/thesis/ch_05_measurement_scale/</link>
      <pubDate>Mon, 29 Jun 2020 12:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_05_measurement_scale/</guid>
      <description>개요  데이터의 유형에는 크게 4가지가 있다.  명목척도, 서열척도, 등간척도, 비율척도   그중에서 PLS-SEM 분석 시에 필요한 척도는 등간척도와 비율척도이다.  간혹, 범주형 변수의 경우 더미변수(Dummy Variable)로 변환하여 투입하기도 한다.    데이터의 유형 (1) 명목척도  범주형 데이터로 측정된 측정대상으로 단순히 범주로 분류하기 위한 목적으로 숫자를 부여한 척도  예시: 성별, 종교, 직업, 혈액형, 만족여부(예/아니오)    (2) 서열척도  범주형 데이터로 명목척도의 기능뿐 아니라 각 범주 간의 대소관계, 순위(서열성)에 관하여 숫자를 부여한 척도(수학적 가감승제 계산 안 됨)  예시: 학력, 건강상태 등    (3) 등간척도  연속형 데이터로 절대적 영점(Absolute Zero)이 없으며 대상이 갖는 양적인 정도의 차이에 따라 등간격으로 숫자를 부여한 척도(수학적 가감승제 계산 가능)  예시: 온도, 만족도(리커트척도), 충성도(리커트척도), 물가지수, 생산지수 등    (4) 비율척도  연속형 데이터로 절대적 영점이 존재하며, 비율계산이 가능한 숫자를 부여한 척도(수학적 가감승제 계산 가능)  매출액, 무게, 가격, 소득, 길이, 부피 등    통계기법의 선택  변수의 성격에 따라 다른 통계기법이 선택될 수 있다.</description>
    </item>
    
    <item>
      <title>ch 04 - 반영적 지표와 형성적 지표</title>
      <link>https://dschloe.github.io/r/thesis/ch_04_reflective_and_formative_indicator/</link>
      <pubDate>Mon, 29 Jun 2020 11:00:00 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_04_reflective_and_formative_indicator/</guid>
      <description>개요  인과방향에 따라 지표를 반영적 지표(reflective indicator) 형성적 지표(formative indicator)로 구분한다. -반영적 지표는 잠재변수가 원인이 되고 측정변수들이 결과가 되는 지표로 잠재변수가 측정변수를 야기하는 것으로 가정함 형성적 지표는 측정변수가 원인이 되고 잠재변수가 결과가 되는 지표로 측정변수가 잠재변수를 야기하는 것으로 가정함. 화살표의 방향은 측정변수에서 잠재변수로 표시됨.  I. 반영적 지표와 형성적 지표 (1) 인과관계(화살표)의 방향  반영적 지표: 잠재변수 $\rightarrow$ 측정변수(지표들) 형성적 지표: 측정변수(지표들) $\rightarrow$  (2) 측정변수(지표)간 상관   반영적 지표: 설문지법 적용 시, 각 설문문항은 유사한 것들로 구성되어 있어야 함</description>
    </item>
    
    <item>
      <title>ch 03 - PLS-SEM 주요 개념</title>
      <link>https://dschloe.github.io/r/thesis/ch_03_main_concepts/</link>
      <pubDate>Sun, 28 Jun 2020 13:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_03_main_concepts/</guid>
      <description>개요  PLS-SEM의 주요 개념 및 유사용어에 대해 살펴본다. 영어로 논문을 써야하기 때문에, 한국어와 영어를 같이 표기했다.  주요개념  잠재변수(Latent Variable): 직접 측정되지 않는 비관측변수(Unobserved Variable)로 측정변수를 통해 간접적으로 측정.  잠재변인, 구인, 구성개념(construct), 차원(dimension), 요인, 이론변수라고도 하며 경로도에는 circle로 표시됨   측정변수(Measured Variable): 직접 측정되는 관측변수(Observed Variable)로 잠재변수를 측정하기 위해 사용된 변수를 말함. (설문문항이 여기에 해당됨  지표변수(Indicator Variable), 명시변수(Manifest Variable), 측정항목(Items)로 표기되며 직사각형 또는 정사각형으로 표시함   외생변수(Exogenous Variable): 독립변수의 개념으로 다른 변수의 변화에 원인(Causes)이나 동기의 역할을 하는 변수로 경로도에서 화살표가 시작이 되는 모든 변수 말함  잠재변수 개념과 결합되면 외생잠재변수(Exogenous Latent Variable)가 됨   내생변수(Endogenous Variable): 종속변수의 개념으로 다른 변수에 의해 영향을 받는 변수이며 화살표를 받는 변수를 말함.</description>
    </item>
    
    <item>
      <title>ch 02 - 구조방정식의 기본 개념과 고려사항</title>
      <link>https://dschloe.github.io/r/thesis/ch_02_sem_concept_considerations/</link>
      <pubDate>Fri, 26 Jun 2020 17:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_02_sem_concept_considerations/</guid>
      <description>개요  기본적으로 다변량 분석 1세대 분석 방법론  군집분석, EFA, 분산분석, 다항회귀, 로지스틱 회귀분석   2세대 분석 방법론  PLS-SEM and CB-SEM   간단한 용어 정리  SEM - Structural Equation Modeling CB - Covariance Based SEM PLS - Partial Least Squares SEM (= PLS path Modeling)   CB-SEM의 주 목적은 실증적으로 검증 가능한 다중 변수들 간의 체계적 관계 확인 PLS-SEM은 주로 탐험적 연구에서의 이론발전에 주로 사용되며, 종속변수의 분산을 설명하는데 주 초점을 맞준다.</description>
    </item>
    
    <item>
      <title>ch 01 - PLS SEM Intro</title>
      <link>https://dschloe.github.io/r/thesis/ch_01_intro/</link>
      <pubDate>Wed, 24 Jun 2020 11:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/thesis/ch_01_intro/</guid>
      <description>개요  석사 학위 논문을 위해 작성하기 위해 만들었음 PLS SEM 모델링을 위한 R 패키지가 존재함  plspm: 2020년 5월 14일 R Cran에서 정식 패키지에서 내려감  위 패키지는 원서 약 230페이지 되는 교재도 있음 1차로 위 패키지를 고려했으나 5/14일 패키지가 내려간 이후 선택에서 제외시킴     또한, SMART PLS라는 상용프로그램도 존재함   특정 R semPLS와 위 상용 프로그램을 비교한 논문이 있었고, 다행히 두 프로그램의 결과값이 동일한 것으로 증명되었다.</description>
    </item>
    
    <item>
      <title>추천 시스템 패키지 소개 - recommenderlab</title>
      <link>https://dschloe.github.io/r/recommendation/recommendation_intro/</link>
      <pubDate>Mon, 22 Jun 2020 10:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/recommendation/recommendation_intro/</guid>
      <description>I. 개요   추천시스템을 처음 배우는 접하는 사람들을 위해 준비한 입문 Tutorial이다.
  패키지 소개서에 있는 내용을 한글로 번역하였다.
  This R package provides an infrastructure to test and develop recommender algorithms. The package supports rating (e.g., 1-5 stars) and unary (0-1) data sets. Supported algorithms are:
  이 R 패키지는 추천자 알고리즘을 테스트하고 개발할 수 있는 인프라를 제공한다. 이 패키지는 등급(예: 별 1-5개) 및 단항(0-1) 데이터 세트를 지원한다.</description>
    </item>
    
    <item>
      <title>Google Colab with R</title>
      <link>https://dschloe.github.io/r/r_settings/settings_colab_with_r/</link>
      <pubDate>Fri, 05 Jun 2020 17:20:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/r_settings/settings_colab_with_r/</guid>
      <description>I. 들어가며  빅데이터 시대에 맞춰서 다양한 툴이 나오는 가운데, Google Colab은 가히 혁명적이라 할 수 있다. 과거 높은 사양의 컴퓨터에서만 수행할 수 있었던 머신러닝과 딥러닝을 구글 코랩의 환경에서 무료로 배울 수 있는 기회를 구글이 제공하기 시작했다. 간단하게 아래 소스코드를 실행하여 CPU와 GPU의 연산속도를 비교 해보자.  GPU를 사용한 TensorFlow    II. Google Colab with R  Google Colab은 매우 편리하다. 실제 강의를 시작하면서 파이썬 관련 모든 강의안은 Google Colab으로 제작중이다.</description>
    </item>
    
    <item>
      <title>R - Select Helper Functions</title>
      <link>https://dschloe.github.io/r/datatransform/dplyr02_select_helper/</link>
      <pubDate>Mon, 18 May 2020 08:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datatransform/dplyr02_select_helper/</guid>
      <description>I. 개요 dplyr 문법에서 select에 대해 다룬다. 보통 select는 열 추출 함수로 소개되고 있다. 그런데, select 함수에는 열 추출을 할 때 도와주는 helper functions가 있는데, 간단하게 소개하고자 한다.
 starts_with ends_with contains matches num_range one_of  작은 도움이 되었기를 바란다.
II. 사전 준비  본격적인 실습에 앞서서, 패키지를 로드 한다.  library(dplyr) library(nycflights13)  flights 데이터셋의 변수들을 확인하자.  glimpse(flights) ## Rows: 336,776 ## Columns: 19 ## $ year &amp;lt;int&amp;gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, … ## $ month &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ day &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ dep_time &amp;lt;int&amp;gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558,… ## $ sched_dep_time &amp;lt;int&amp;gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600,… ## $ dep_delay &amp;lt;dbl&amp;gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -… ## $ arr_time &amp;lt;int&amp;gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849… ## $ sched_arr_time &amp;lt;int&amp;gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851… ## $ arr_delay &amp;lt;dbl&amp;gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -… ## $ carrier &amp;lt;chr&amp;gt; &amp;#34;UA&amp;#34;, &amp;#34;UA&amp;#34;, &amp;#34;AA&amp;#34;, &amp;#34;B6&amp;#34;, &amp;#34;DL&amp;#34;, &amp;#34;UA&amp;#34;, &amp;#34;B6&amp;#34;, &amp;#34;EV&amp;#34;, &amp;#34;B6&amp;#34;, … ## $ flight &amp;lt;int&amp;gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, … ## $ tailnum &amp;lt;chr&amp;gt; &amp;#34;N14228&amp;#34;, &amp;#34;N24211&amp;#34;, &amp;#34;N619AA&amp;#34;, &amp;#34;N804JB&amp;#34;, &amp;#34;N668DN&amp;#34;, &amp;#34;N39… ## $ origin &amp;lt;chr&amp;gt; &amp;#34;EWR&amp;#34;, &amp;#34;LGA&amp;#34;, &amp;#34;JFK&amp;#34;, &amp;#34;JFK&amp;#34;, &amp;#34;LGA&amp;#34;, &amp;#34;EWR&amp;#34;, &amp;#34;EWR&amp;#34;, &amp;#34;LGA&amp;#34;… ## $ dest &amp;lt;chr&amp;gt; &amp;#34;IAH&amp;#34;, &amp;#34;IAH&amp;#34;, &amp;#34;MIA&amp;#34;, &amp;#34;BQN&amp;#34;, &amp;#34;ATL&amp;#34;, &amp;#34;ORD&amp;#34;, &amp;#34;FLL&amp;#34;, &amp;#34;IAD&amp;#34;… ## $ air_time &amp;lt;dbl&amp;gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, … ## $ distance &amp;lt;dbl&amp;gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733,… ## $ hour &amp;lt;dbl&amp;gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, … ## $ minute &amp;lt;dbl&amp;gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, … ## $ time_hour &amp;lt;dttm&amp;gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 …  총 19개의 변수들로 구성이 되어 있는 것을 확인 할 수 있다.</description>
    </item>
    
    <item>
      <title>ch04 - Modeling Visualisation</title>
      <link>https://dschloe.github.io/r/datavisualisation/ch04_modeling_visualisation/</link>
      <pubDate>Fri, 15 May 2020 11:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datavisualisation/ch04_modeling_visualisation/</guid>
      <description>개요  A picture is worth a thousand words — English Language Adage
  The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>Shiny App Deployment Using GCP</title>
      <link>https://dschloe.github.io/r/shiny/applications/gcp_shiny/</link>
      <pubDate>Sun, 10 May 2020 19:47:18 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/applications/gcp_shiny/</guid>
      <description>I. 개요 Google Data Studio는 놀랍도록 유연한 도구로서 마케팅 대행사 중 Google Analytics를 활용한 업체들은 대부분 항상 사용합니다. 때로는 유연성이 더 필요할 때 R &amp;rsquo;s Shiny 패키지를 사용하여 데이터 시각화 / 대시 보드 앱을 만드는 것이 매우 쉽습니다. 이 옵션을 사용하면 모든 소스의 데이터를 예측 모델링과 함께 사용할 수 있는 장점이 있습니다.
이 블로그 게시물은 3 부분으로 나누어져 있습니다.
 먼저 Google Cloud Virtual Machine (VM)을 설정하고 웹 액세스를 허용하도록 방화벽 규칙을 구성합니다.</description>
    </item>
    
    <item>
      <title>Basic Objects - Dataframe</title>
      <link>https://dschloe.github.io/r/basics/dataframe/</link>
      <pubDate>Wed, 06 May 2020 11:10:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/dataframe/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. DataFrame의 개요  본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
 데이터프레임은 서로 다른 성질의 벡터가 모여 있는 집합이라고 할 수 있다.1
(1) 데이터프레임 생성 이제 데이터프레임을 만들어보자. 어려운 것은 아니니 쉽게 따라 올 수 있을 것이다.</description>
    </item>
    
    <item>
      <title>ch03 - gghistostats</title>
      <link>https://dschloe.github.io/r/datavisualisation/ch03_gghistostats/</link>
      <pubDate>Mon, 04 May 2020 11:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datavisualisation/ch03_gghistostats/</guid>
      <description>Intro  A picture is worth a thousand words — English Language Adage The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>ch02 - Histogram</title>
      <link>https://dschloe.github.io/r/datavisualisation/ch02_histogram/</link>
      <pubDate>Sun, 03 May 2020 20:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datavisualisation/ch02_histogram/</guid>
      <description>Intro  A picture is worth a thousand words — English Language Adage The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>stackoverflow with dplyr 01 - mutate_all</title>
      <link>https://dschloe.github.io/r/datatransform/dplyr01_mutate_all/</link>
      <pubDate>Thu, 30 Apr 2020 10:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datatransform/dplyr01_mutate_all/</guid>
      <description>I. 개요 dplyr 문법에 관한 설명은 사실 차고 넘친다. 구체적인 설명은 하지 않겠다. Google이나 Naver에서 dplyr을 검색해보자! 검색하면 쉽게 정리된 글들이 많이 있다.
그런데, 실제 실무에서 다루는 데이터의 질과 양은 다 다르다. 데이터 가공은 결국 연구자의 환경에 따라 달라지는데, 조금 더 효과적으로 dplyr 문법을 사용하려면 결국엔 아이디어가 필요하고, 그리고 stackoverflow를 찾게 되어 있다. 집단 지성의 힘이랄까?
그래서 가급적, stackoverflow에 나와 있는 문제 중 재미있는 해결법 등을 소개하며 연재하려고 한다.
제 강의를 들으신 분들에게 작은 도움이 되기를 바랍니다.</description>
    </item>
    
    <item>
      <title>list handling</title>
      <link>https://dschloe.github.io/r/basics/list/</link>
      <pubDate>Wed, 29 Apr 2020 11:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/list/</guid>
      <description>I. 개요 모든 프로그래밍 언어에는 기본적으로 데이터타입이 존재한다. R도 프로그래밍 언어이기 때문에 데이터 타입의 일반적인 유형이 존재한다.
Vector의 기본 개념을 익혔다면, 전반적인 구조에 대해 살피는 시간을 갖도록 한다. 먼저 동일 성질의 Vector가 모여서 matrix도 되고, 데이터프레임도 된다. 그리고 이러한 다양한 데이터의 구조가 모여 리스트를 형성하는데,
리스트를 만드는 것도 중요한 건, 즉 이해다. 리스트에 접근법이 중요한데, 리스트를 잘 다루면, apply 함수 계열을 사용하는데도 큰 도움이 된다.
특히, 100GB 이상의 데이터를 다루게 되면, apply() 함수로 작업해야 하는 일이 종종 발생한다.</description>
    </item>
    
    <item>
      <title>vcrts01 - Combining Vectors</title>
      <link>https://dschloe.github.io/r/datatransform/vcrts01/</link>
      <pubDate>Tue, 28 Apr 2020 10:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datatransform/vcrts01/</guid>
      <description>I. 개요 vctrs 패키지. Vector Helpers 패키지1라고 불리운다. 벡터를 활용할 때, 어려운 부분은 데이터와 조합해서 사용할 때다. 특히 서로다른 성질의 Vectors를 Combining 할 때 발생하는 에러에 대해 효과적으로 해결할 수 있는 대안을 제시한다.
II. Vectors 벡터에 관한 기초 부분은 여기에서 생략하고, 필자가 작성한 기초 부분에서 참조하기를 바란다.
 Basci Objects  (1) 벡터의 정의 R의 기본문법에서 벡터의 정의는 다음과 같다.
c(1, 2, 3) ## [1] 1 2 3 c(&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;) ## [1] &amp;quot;a&amp;quot; &amp;quot;b&amp;quot; &amp;quot;c&amp;quot; (2) tidyverse 벡터와 관련되어서 일반적으로 다음과 같은 함수에서 넓게 활용된다.</description>
    </item>
    
    <item>
      <title>Ch03 Components of Process Data</title>
      <link>https://dschloe.github.io/r/dataanalysis/process_analysis/ch03_components_of_process_data/</link>
      <pubDate>Mon, 27 Apr 2020 23:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/dataanalysis/process_analysis/ch03_components_of_process_data/</guid>
      <description>I. 개요 지난시간에 patients에 관한 데이터를 통해서 프로세스 분석에 대한 일반적인 개념을 접했다.
이번 포스트에서는 bupaR에 대한 이론적인 내용과 함께 간단하게 실습을 진행하도록 한다.
지난시간과 마찬가지로 먼저 데이터를 획득하는 것에서부터 출발한다.
library(bupaR) library(eventdataR) patients &amp;lt;- patients dim(patients) ## [1] 5442 7 5442행과 7개의 열이 확인되었다.
class(patients) ## [1] &amp;quot;eventlog&amp;quot; &amp;quot;tbl_df&amp;quot; &amp;quot;tbl&amp;quot; &amp;quot;data.frame&amp;quot; II. 용어 정리 우선 용어 정리가 필요하다. Events, Event log, Activity 등등. 하나씩 살펴보자.
(1) Events 우선 Events에 관한 이해를 돕기 위해 아래 그림을 우선 살펴보자.</description>
    </item>
    
    <item>
      <title>More on Vectors and Indexing</title>
      <link>https://dschloe.github.io/r/basics/more_vectors_indexing/</link>
      <pubDate>Sun, 26 Apr 2020 16:10:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/more_vectors_indexing/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. 벡터  본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
 현재 진행중인 R 기초문법은 아래와 같습니다. 원하시는 것은 참조해서 가볍게 공부하시기를 바랍니다.
 Basic Objects - Vector  벡터(Vector). R에서 다루는 가장 작은 단위값의 데이터다.</description>
    </item>
    
    <item>
      <title>Basic Objects - Vector</title>
      <link>https://dschloe.github.io/r/basics/basic_objects_vector/</link>
      <pubDate>Sat, 25 Apr 2020 18:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/basic_objects_vector/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. 벡터  본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
 벡터(Vector). R에서 다루는 가장 작은 단위값의 데이터다. 1차원으로 구성이 되어 있다.
(1) 4가지 벡터 크게 4가지의 벡터가 존재한다. 간단하게 코드를 작성해보자.
xNum &amp;lt;- c(1, 3.</description>
    </item>
    
    <item>
      <title>Ch02 Process Analysis Basic</title>
      <link>https://dschloe.github.io/r/dataanalysis/process_analysis/ch02_process_analysis_basic/</link>
      <pubDate>Thu, 23 Apr 2020 23:20:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/dataanalysis/process_analysis/ch02_process_analysis_basic/</guid>
      <description>I. 개요 지난시간에 patients에 관한 데이터를 통해서 프로세스 분석에 대한 일반적인 개념을 접했다.
이번 포스트에서는 bupaR에 대한 이론적인 내용과 함께 간단하게 실습을 진행하도록 한다.
지난시간과 마찬가지로 먼저 데이터를 획득하는 것에서부터 출발한다.
library(bupaR) library(eventdataR) patients &amp;lt;- patients dim(patients) ## [1] 5442 7 5442행과 7개의 열이 확인되었다.
class(patients) ## [1] &amp;quot;eventlog&amp;quot; &amp;quot;tbl_df&amp;quot; &amp;quot;tbl&amp;quot; &amp;quot;data.frame&amp;quot; 그리고, 데이터는 eventlog, tbl_df, data.frame으로 구성된 것을 확인할 수 있다. 기존에 R을 학습한 사람들은 tbl &amp;amp; data.frame에 대해서 한두번쯤 들었을 거라 생각한다.</description>
    </item>
    
    <item>
      <title>Ch01 Process Analysis Intro</title>
      <link>https://dschloe.github.io/r/dataanalysis/process_analysis/ch01_process_analysis_intro/</link>
      <pubDate>Mon, 20 Apr 2020 21:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/dataanalysis/process_analysis/ch01_process_analysis_intro/</guid>
      <description>I. Process Mining Intro 모든 비즈니스는 프로세스와 연관이 깊다. 이러한 데이터를 통상적으로 event라고 부르며, 다루는 데이터는 log 데이터와 연관이 깊다. 프로세스 마이닝(Process Mining)은 데이터의 추출, 프로세싱, 그리고 분석의 순으로 진행한다.
 데이터 추출 (Extraction): Raw Data를 Event Data로 변환시킨다. 프로세싱 (Processing): 데이터 가공과 비슷하며, 보통 Aggregation, Filtering, Enrichment의 용어가 등장한다. 분석 (Analysis): Performance, Control-Flow 등과 연관된 분석이 진행된다.  우선 빠르게 시각화부터 진행해보자.
library(bupaR) library(httr) library(processmapR) library(edeaR) url &amp;lt;- &amp;#39;https://github.com/chloevan/datasets/blob/master/log/log_eat_patterns.RDS?raw=true&amp;#39; patterns &amp;lt;- readRDS(url(url)) trace_explorer(patients, coverage=1) 위 그래프에 대한 해석은 나중에 하더라도, 위 데이터를 보면, Rgst아 TraA는 공통으로 존재하고, 경로에 따라서 X-Ray, Blood Test에 나뉘는 걸 봐서는 환자의 경로에 관한 데이터임을 알 수 있다.</description>
    </item>
    
    <item>
      <title>R 시각화 튜토리얼 Intro</title>
      <link>https://dschloe.github.io/r/datavisualisation/ch01_intro/</link>
      <pubDate>Sun, 19 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/datavisualisation/ch01_intro/</guid>
      <description>Intro  A picture is worth a thousand words — English Language Adage The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>Shiny 프로젝트 Review &amp; 더 알아볼 것</title>
      <link>https://dschloe.github.io/r/shiny/project_final/</link>
      <pubDate>Sat, 18 Apr 2020 17:15:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_final/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 6_2 - Chart Automation</title>
      <link>https://dschloe.github.io/r/shiny/project_06_02/</link>
      <pubDate>Sat, 18 Apr 2020 14:15:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_06_02/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Round 함수 - digits</title>
      <link>https://dschloe.github.io/r/basics/round/</link>
      <pubDate>Fri, 17 Apr 2020 10:38:15 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/basics/round/</guid>
      <description>Round 함수 소개 round 함수는 대개 소수점 자리에서 반올림 할 때 자주 쓰는다.
test &amp;lt;- c(1.24, 2.40, 3.56, 4.56) round(test, digits = 1) ## [1] 1.2 2.4 3.6 4.6 digits = 1의 의미는 소수점 첫번째 자리에서 반올림 하라는 뜻이다.
그런데 digits = -1을 하게 되면 어떻게 될까?
정수 반올림 빠르게 실습을 해보자.
test2 &amp;lt;- c(-14, -26, 14, 26, 39, 124, 247) round(test2, digits = -1) ## [1] -10 -30 10 30 40 120 250 digits = -1을 하게되면 정수의 첫번째 자리에서 반올림한다.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 6_1 - 데이터 전처리</title>
      <link>https://dschloe.github.io/r/shiny/project_06_01/</link>
      <pubDate>Tue, 14 Apr 2020 10:15:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_06_01/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>GT 패키지 소개</title>
      <link>https://dschloe.github.io/r/newpkgs/gt_intro/</link>
      <pubDate>Mon, 13 Apr 2020 00:21:01 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/newpkgs/gt_intro/</guid>
      <description>공지 본 블로그는 2020-04-08에 소개된 Great Looking Tables: gt(v0.2) by Richard Iannone 글을 번역한 것이다. 함수와 관련된 설명은 가급적 원어를 직접 인용 했으니, 영어로 직접 함수의 사용처를 음미하시길 바란다.
I. Intro gt라는 이름은 grammar of tables즉 &amp;ldquo;테이블의 문법&amp;quot;의 줄임말이며 gt의 목표는 ggplot2와 비슷하게 운영하는 것이다. 특정 테이블을 쉽게 만들 수 있을 뿐만 아니라 다양한 문제를 해결하기 위해 서로 다른 방법으로 재결합할 수 있는 기본 구성요소 집합을 기술하는 역할을 한다.
R 사용자가 맞춤형(customized) 테이블을 R Markdown에서 만들 필요가 있다면, gt 패키지가 그 과정에 도움을 줄 것이다.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 5 - Chart with DateInput</title>
      <link>https://dschloe.github.io/r/shiny/project_05/</link>
      <pubDate>Sat, 11 Apr 2020 10:15:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_05/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 4 - Visusalization (Map Chart)</title>
      <link>https://dschloe.github.io/r/shiny/project_04/</link>
      <pubDate>Thu, 09 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_04/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 3 - Visusalization (Bubble Chart)</title>
      <link>https://dschloe.github.io/r/shiny/project_03/</link>
      <pubDate>Wed, 08 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_03/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 2 - Visusalization (Time Series)</title>
      <link>https://dschloe.github.io/r/shiny/project_02/</link>
      <pubDate>Tue, 07 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_02/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project I - Get Data</title>
      <link>https://dschloe.github.io/r/shiny/project_01/</link>
      <pubDate>Mon, 06 Apr 2020 09:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/project_01/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 08 - HTML, CSS 적용</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_08/</link>
      <pubDate>Sun, 05 Apr 2020 11:30:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_08/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 07 - flexdashboard package</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_07/</link>
      <pubDate>Thu, 02 Apr 2020 21:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_07/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 06 - shinydashboard package</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_06/</link>
      <pubDate>Wed, 01 Apr 2020 17:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_06/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 05 - Sharing Apps</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_05/</link>
      <pubDate>Tue, 31 Mar 2020 01:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_05/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts  II. Shiny Deployment의 개요 이 영역은 웹개발자에게는 매우 쉬운 영역일 수도 있다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 04 - Layouts</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_04/</link>
      <pubDate>Sun, 29 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_04/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content  II. Layouts의 개요 이번 시간에는 Shiny Layouts 개요에 대한 간략적인 소개를 하려고 한다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 03 - HTML content</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_03/</link>
      <pubDate>Fri, 27 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_03/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure  II. HTML Content 개요 이번 시간에는 HTML Content 개요에 대한 간략적인 소개를 하려고 한다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 02 - Shiny Structure</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_02/</link>
      <pubDate>Sun, 22 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_02/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny 소개 지난시간에 Shiny에 관한 대략적인 소개를 했다. 처음 이 페이지를 방문한 사람들 위해 shiny tutorial 01 - get started 에서 짧게 확인하기를 바란다.
II. Shiny App Structure 아래 샘플 코드를 확인하자.
# load the shiny package library(shiny) # 화면 구성 (UI) - 프론트엔드 ui &amp;lt;- fluidPage( numericInput(inputId = &amp;#34;n&amp;#34;, label = &amp;#34;Sample size&amp;#34;, value = 25), plotOutput(outputId = &amp;#34;hist&amp;#34;) ) # 서버 구성 - 벡엔드 server &amp;lt;- function(input, output) { output$hist &amp;lt;- renderPlot({ hist(rnorm(input$n)) # 결과물을 만들어내는 코드 작성 }) } # shiny app 호출 # 프로젝트 진행 시, 폴더 안에 # 파일명은 app.</description>
    </item>
    
    <item>
      <title>shiny tutorial 01 - get started</title>
      <link>https://dschloe.github.io/r/shiny/tutorial_01/</link>
      <pubDate>Sat, 21 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/shiny/tutorial_01/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny 소개 Shiny는 R에서 제공하는 일종의 Web Framework이다. 기존 웹사이트와 다르게, 주요 목적은 데이터를 활용해서 대시보드를 만드는 것에 초점이 맞춰져 있다.
가장 큰 장점은 무료로 빠른 프로토타입을 만들 수 있고, HTML, CSS, Javascript와 직접적으로 호환이 되기 때문에 무한한 확장성이 있다. 바로 중급 레벨에서 배우고 싶으시다면 Intermediate Level을 클릭한다.</description>
    </item>
    
    <item>
      <title>R Markdown Introduction</title>
      <link>https://dschloe.github.io/r/rmarkdown/rmarkdownintro/</link>
      <pubDate>Wed, 18 Mar 2020 13:10:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/rmarkdown/rmarkdownintro/</guid>
      <description>R Markdown 소개 및 환경설정 데이터 분석가의 주요 업무 중의 하나는 향후에 참고자료로 활용하기 위해 작업결과를 문서화 해야 하는데, 상당량의 보고서를 작성해서 분석과정과 출력결과를 기술해야만 합니다.
보통의 과정은 아래과 같을 것입니다.
 1단계: 본인의 작업을 위해서 R 스크립트 작성 2단계: 다양한 그래프가 첨부된 분석결과를 Word, PPT 분석결과를 기술해서 동료 또는 메신저로 분석결과 전송 3단계: 분석결과 토의 4단계: 각각의 그래프 결과 코드를 매칭하기 위한 작업이 토의 중 발생 5단계: 혼란 및 불필요한 시간 소요 발생  그런데, 해당 작업물을 그 때 마다 웹페이지(HTML)을 생성하여 자체 서버내 구축할 수 있다면, 그러면 위 5단계의 과정을 3단계(소스코드 작성 -&amp;gt; 웹 게시 -&amp;gt; 분석결과 토의)로 축소할 수가 있을 것이며 특히, 연구자가 분석 당시의 고민과 문제점들을 스크롤링과 함께 같이 고민할 수 있는 시간으로 빠져들 수 있도록 유도할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Leaflet for R</title>
      <link>https://dschloe.github.io/r/graph01_leaflet/</link>
      <pubDate>Tue, 17 Mar 2020 20:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/graph01_leaflet/</guid>
      <description>1. Introduction Leaflet 패키지는 동적 지도 시각화를 위한 자바스크립트-오픈소스 기반 라이브러리입니다. 일반적인 기업 회사 뿐만 아니라 GIS 전문 회사인 OpenStreetMap, Mapbox, 그리고 CartoDB에서도 이 패키지를 사용하고 있습니다.
R의 leaflet 패키지는 일종의 자바스크립트의 Leaflet을 쉽게 연동(Integrate) 할 수 있도록 도와 주는 패키지입니다.
2. Features 패키지의 주요 특징은 아래와 같습니다. 오역 방지를 위해 원문에 있는 내용을 그대로 사용했습니다.
  Interactive panning/zooming
  Compose maps using arbitrary combinations of:
 Map tiles Markers Polygons Lines Popups GeoJSON    Create maps right from the R console or RStudio</description>
    </item>
    
    <item>
      <title>Tensorflow For R - Quick Start</title>
      <link>https://dschloe.github.io/r/settings01_installation/</link>
      <pubDate>Mon, 16 Mar 2020 20:33:39 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/settings01_installation/</guid>
      <description>1. 개요 (Overview) tensorflow(텐서플로) R 패키지를 사용하기 전에 시스템에 TensorFlow 버전을 설치해야 한다. 아래에서는 TensorFlow 설치 방법과 설치 사용자 정의에 사용할 수 있는 다양한 옵션에 대해 설명 한다.
이번 포스트에서는 주로 R install_tensorflow() 함수의 사용을 다루며, 이는 TensorFlow를 설치하는 데 필요한 다양한 단계에서 wrapper 쉽게 사용할 수 있도록 도와 준다.
Tensorflow(텐서플로)는 아래와 같은 OS 환경에서 구동이 된다.
 Ubuntu 16.04 or later Windows 7 or later macOS 10.12.6 (Sierra) or later (no GPU support)  2.</description>
    </item>
    
    <item>
      <title>PLS-SEM에서 중요 용어 비교</title>
      <link>https://dschloe.github.io/r/stat01_hypothesis/</link>
      <pubDate>Sun, 15 Mar 2020 21:23:58 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/stat01_hypothesis/</guid>
      <description>개요  PLS-SEM에서의 가설 설정은 선행연구의 검토과정을 통해서 이루어지며 귀무가설은 기술하지 않고 대립가설을 중심으로 설정한다. 연구가설은 방향적 검증(Directional Test)와 비방향적 검증(Non-Directional Test)으로 구분한다.  R 강의 소개  필자의 강의: 왕초보 데이터 분석 with R  쿠폰 유효일은 2021년 10월 30일까지입니다. 링크: https://www.udemy.com/course/beginner_with_r/?couponCode=5BF397C9A1E46079627D 현재 강의를 계속 찍고 있고, 가격은 한 Section이 끝날 때마다 조금씩 올릴 예정입니다.    Python 강의 소개  취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다.</description>
    </item>
    
  </channel>
</rss>
